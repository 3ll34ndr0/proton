sub route_p2p {

#****f* / route_p2p
# NAME
#   route_p2p
# FUNCTION
#  point to point routing
# SYNOPSIS
#   route_p2p -nets <net1, net2 ......>
#             -layers <M1, M2 ........>
#             -width <pinWidth >
# route_p2p -nets net1,net2,net3,net4,net5,net6,net7,net8,net9,net10,net11,net12,net13,net14,net15,net16,net17,net18,net19,net20,net21,net22,net23,net24
# INPUTS
#   options: -nets <net1, net2 ......>,-layers <M1, M2 ........>,-width <pinWidth >
#   
# OUTPUTS
#    generate router file
#****

my $noOfArg = @_;
my ($netNames, $layers, $netWidth) = ("", "", "");
%TEMP_NET_INST = ();
%TEMP_INST_PINCOORD = ();

 if($noOfArg < 2 || $_[0] eq "-h" || $_[0] eq "-help" || $_[0] eq "-HELP"){
    print "Usage:  route_p2p -nets <net1, net2 ......>\n";
    print "                  -layers <M1, M2 ........>\n";
    print "                  -width <pinWidth >\n";
 }else{  
    for(my $i=0; $i<$noOfArg; $i++){
        if ($_[$i] eq "-nets"){$netNames = $_[$i+1];}
        if ($_[$i] eq "-layers"){$layers = $_[$i+1];}
        if ($_[$i] eq "-width"){$netWidth = $_[$i+1];}
    }

  my @nets = split(/\,/,$netNames);
  if(@nets > 0){
    foreach my $net(@nets){
      my @INST = ();
      my %inst_pin_point_hash = (); 
      if(exists $NETS_ALREADY{$net}){
         foreach my $instance (keys %{$NETS_ALREADY{$net}}){
            my $pinName = $NETS_ALREADY{$net}{$instance};
            my @pin_mid_points = ($pinName);
            if(exists $COMP_ALREADY{$instance} ) {
                 my $cellref = $CADB{$instance}->dbCadbGetCellref;
                 my @instLoc = $CADB{$instance}->dbCadbGetLoc;
                 my $orient = $CADB{$instance}->dbCadbGetOrient;
                 if(exists $PLDB{$cellref} ){
                    my @cellOrigin = $PLDB{$cellref}->dbMdbGetOrigin;
                    my @cellSize = $PLDB{$cellref}->dbMdbGetSize;
                    my @pinRects = $PLDB{$cellref}->dbMdbGetPinRect($pinName);
                    my $pinDire = $PLDB{$cellref}->dbMdbGetPinDir($pinName);
#####################################################################################################################
############################ finding nearest Pin Rectangles #########################################################
#####################################################################################################################
                    foreach my $rect (@pinRects){
                       my ($layer, $llx2, $lly2, $urx2, $ury2)=(split(/\s+/,$rect))[0,2,3,4,5];
                       my @FirstRect = &xformCellPinToInstPin($instLoc[0],$instLoc[1],$cellOrigin[0],$cellOrigin[1],$orient,$cellSize[0],$cellSize[1],$llx2,$lly2,$urx2,$ury2);
                       my $pinX = ($FirstRect[0]+$FirstRect[2])/2;
                       my $pinY = ($FirstRect[1]+$FirstRect[3])/2;
                       push(@pin_mid_points, $pinX,$pinY); 
                    }
                    $inst_pin_point_hash{$instance} = \@pin_mid_points;
                    push(@INST, $instance);
                 }#if cellref exists in PLDB
              }#if instance exists
         }#foreach instance 
         my @src_pin_points = @{$inst_pin_point_hash{$INST[-2]}}; 
         my @sink_pin_points = @{$inst_pin_point_hash{$INST[-1]}}; 
         my %DISTANCE = ();
         for(my $i=1; $i<=$#src_pin_points; $i=$i+2){
            for(my $j=1; $j<=$#sink_pin_points; $j=$j+2){
                my $distance = sqrt(($src_pin_points[$i]-$sink_pin_points[$j])*($src_pin_points[$i]-$sink_pin_points[$j]) +($src_pin_points[$i+1]-$sink_pin_points[$j+1])*($src_pin_points[$i+1]-$sink_pin_points[$j+1]));
                $DISTANCE{$i.",".$j} = $distance;
            }
         }
         my @ponts = sort {$DISTANCE{$a} <=> $DISTANCE{$b}}(keys(%DISTANCE));
         my ($u, $v) = (split (/\,/,$ponts[0]))[0,1];
         my $srcPin = $src_pin_points[0];
         my $pinX = $src_pin_points[$u];
         my $pinY = $src_pin_points[$u+1];
         my $sinkPin = $sink_pin_points[0];
         my $pinX1 = $sink_pin_points[$v];
         my $pinY1 = $sink_pin_points[$v+1];
         $TEMP_INST_PINCOORD{$net.",".$INST[-2]} = [$srcPin,$pinX,$pinY];
         $TEMP_INST_PINCOORD{$net.",".$INST[-1]} = [$sinkPin,$pinX1,$pinY1];
#################################################################################################
         @INST = sort(@INST);  
         $TEMP_NET_INST{$net} = \@INST;  
      }#if net exists in net DB
    }#foreach net
  }#if more than one net
}#if correct no of arguments
&create_route_path;
}#sub route_p2p
####################################################################################
sub createSrcSinkMachedNetArray {
my @total_nets = ();
foreach my $net (keys %TEMP_NET_INST){
  my $match_found = 0;
  my $instances = $TEMP_NET_INST{$net};
  if($#total_nets > -1){
BLOOP:for(my $i=0; $i <= $#total_nets; $i++){
          my $net_group = $total_nets[$i];
          foreach my $netName (@$net_group){
             my $src_sink_inst = $TEMP_NET_INST{$netName};
             if(@$instances[0] eq @$src_sink_inst[0] && @$instances[1] eq @$src_sink_inst[1]){
                my @new_array = (@$net_group,$net); 
                $total_nets[$i] = \@new_array;
                $match_found = 1;
                last BLOOP;
             }#if inst list matched
          }#foreach net of netGroup
       }#foreach group    
       push(@total_nets,[$net]) if ($match_found == 0);
  }else{push(@total_nets,[$net]);}  
}
return(@total_nets);
}#sub createSrcSinkMachedNetArray
##############################################################################################

sub create_route_path {
my @net_groups = &createSrcSinkMachedNetArray;
open (WRITE, ">router.out");
foreach my $netgroup (@net_groups){
&call_create_route_path(@$netgroup);
}
close WRITE;
}#sub create_route_path

sub call_create_route_path{
my @nets = @_;

my @net_array = create_samePinSide_netGroup(@nets);
my $MulFactor = $MICRONFACTOR/$DEF_DATABASE_UNIT;
foreach my $net (@net_array){
   my %temp_net_srcPinstorage = ();
   my %temp_net_sinkPinstorage = ();
   my @inst = @{$TEMP_NET_INST{@$net[0]}};
   my $sink_side = relative_sink_side($inst[0],$inst[1]);
   my $srcPin = $TEMP_INST_PINCOORD{@$net[0].",".$inst[0]};
   my $sinkPin = $TEMP_INST_PINCOORD{@$net[0].",".$inst[1]}; 
   my $srcPinSide = relative_pin_side($inst[0],@$srcPin[1],@$srcPin[2]);
   #print "net @$net[0], src $inst[0], pinside $srcPinSide\n";
   my $sinkPinSide = relative_pin_side($inst[1],@$sinkPin[1],@$sinkPin[2]);
   #print "net @$net[0], sink $inst[1], pinside $sinkPinSide\n";
   #print "src $inst[0] sink $inst[1]\n";
   my @src_bbox = $CADB{$inst[0]}->dbCadbGetbBox;
   my @sink_bbox = $CADB{$inst[1]}->dbCadbGetbBox;

   foreach my $netName (@$net){
     my $src_pin = $TEMP_INST_PINCOORD{$netName.",".$inst[0]};
     my $sink_pin = $TEMP_INST_PINCOORD{$netName.",".$inst[1]}; 

     if($srcPinSide eq "ts" || $srcPinSide eq "bs"){$temp_net_srcPinstorage{$netName} = @$src_pin[1];
     }elsif($srcPinSide eq "rs" || $srcPinSide eq "ls"){$temp_net_srcPinstorage{$netName} = @$src_pin[2];}
     if($sinkPinSide eq "ts" || $sinkPinSide eq "bs"){$temp_net_sinkPinstorage{$netName} = @$sink_pin[1];
     }elsif($sinkPinSide eq "rs" || $sinkPinSide eq "ls"){$temp_net_sinkPinstorage{$netName} = @$sink_pin[2];}
   } 
     my @netsrc = sort {$temp_net_srcPinstorage{$a} <=> $temp_net_srcPinstorage{$b}}(keys(%temp_net_srcPinstorage));
     my @netsink = ();
     if(($srcPinSide eq "ts" && $sinkPinSide eq "bs") || ($srcPinSide eq "bs" && $sinkPinSide eq "ts") || ($srcPinSide eq "ls" && $sinkPinSide eq "rs") || ($srcPinSide eq "rs" && $sinkPinSide eq "ls")|| ($srcPinSide eq "ls" && $sinkPinSide eq "bs") || ($srcPinSide eq "rs" && $sinkPinSide eq "ts") || ($srcPinSide eq "ts" && $sinkPinSide eq "rs") || ($srcPinSide eq "bs" && $sinkPinSide eq "ls")){ 
        @netsink = sort {$temp_net_sinkPinstorage{$a} <=> $temp_net_sinkPinstorage{$b}}(keys(%temp_net_sinkPinstorage));
     }else{
        @netsink = sort {$temp_net_sinkPinstorage{$b} <=> $temp_net_sinkPinstorage{$a}}(keys(%temp_net_sinkPinstorage));
     }
#print "srcarr @netsrc , sinkarr @netsink\n";
     my $are_equal = &compare_arrays(\@netsrc,\@netsink );
     if($are_equal == 0){print "WARN-RTR : 001 : nets @netsrc can not routed together\n";
     }else{
         my $noOfNets = @netsrc;
         my $srcMin = $temp_net_srcPinstorage{$netsrc[0]};
         my $srcMax = $temp_net_srcPinstorage{$netsrc[-1]};
         my $sinkMin = $temp_net_sinkPinstorage{$netsink[0]}; 
         my $sinkMax = $temp_net_sinkPinstorage{$netsink[-1]}; 
         my $srcWidth = abs($srcMin - $srcMax);
         my $sinkWidth = abs($sinkMin - $sinkMax);
         my $srcRef = $srcMin ;
         my $sinkRef = $sinkMin;
         #print "$srcMin,$srcMax,$sinkMin,$sinkMax,$srcWidth,$sinkWidth,$srcRef,$sinkRef\n"; 
         for(my $i=0; $i< $noOfNets; $i++){
             my @netCoords = ();
             my $driverInst = &getNetDriver($netsrc[$i]);
             my $dir = 0;
             if($driverInst eq  $inst[0]){$dir = 1;}  
             my $srcPinCoords = $TEMP_INST_PINCOORD{$netsrc[$i].",".$inst[0]};
             my $sinkPinCoords = $TEMP_INST_PINCOORD{$netsrc[$i].",".$inst[1]};
             #print "net $netsrc[$i],$sink_side\n"; 
################################################################################################################################
############################ Routing Conditions#################################################################################
################################################################################################################################
             if($sink_side eq "L"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0]- 100 - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[2] = $src_bbox[0]- 100 - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[2] -$srcRef) ; 
                  $netCoords[6] = $sink_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 + (@$srcPinCoords[2] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 - (@$srcPinCoords[2] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin < $sink_bbox[3]){
                     $netCoords[2] = $src_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                     $netCoords[3] = $netCoords[1]; 
                     $netCoords[4] = $netCoords[2];
                     $netCoords[5] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[2] -$srcRef) ; 
                     $netCoords[6] = @$sinkPinCoords[1]; 
                     $netCoords[7] = $netCoords[5]; 
                     $netCoords[8] = $netCoords[6]; 
                     $netCoords[9] = @$sinkPinCoords[2]; 
                  }else{
                     $netCoords[2] = @$sinkPinCoords[1]; 
                     $netCoords[3] = $netCoords[1];
                     $netCoords[4] = $netCoords[2]; 
                     $netCoords[5] = @$sinkPinCoords[2]; 
                  } 
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax > $sink_bbox[1]){
                     $netCoords[2] = $src_bbox[0] - 100 - abs(@$srcPinCoords[2]-$srcRef); 
                     $netCoords[3] = $netCoords[1]; 
                     $netCoords[4] = $netCoords[2];
                     $netCoords[5] = $sink_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[2] -$srcRef) ; 
                     $netCoords[6] = @$sinkPinCoords[1]; 
                     $netCoords[7] = $netCoords[5]; 
                     $netCoords[8] = $netCoords[6]; 
                     $netCoords[9] = @$sinkPinCoords[2]; 
                  }else{
                     $netCoords[2] = @$sinkPinCoords[1]; 
                     $netCoords[3] = $netCoords[1];
                     $netCoords[4] = $netCoords[2]; 
                     $netCoords[5] = @$sinkPinCoords[2]; 
                  } 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2]+ 100 + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] < $src_bbox[1]); 
                  $netCoords[5] = $src_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] > $src_bbox[1]); 
                  $netCoords[6] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $src_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef) ; 
                  $netCoords[6] = $sink_bbox[2] + 100 + abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] > $sinkMin); 
                  $netCoords[6] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] < $sinkMin); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];

                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2];
                  $netCoords[5] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] > $sink_bbox[3]) ; 
                  $netCoords[5] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] < $sink_bbox[3]) ; 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2];
                  $netCoords[5] = $src_bbox[1] - 100  - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] < $sink_bbox[1]) ; 
                  $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] > $sink_bbox[1]) ; 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[1] -$srcRef) if($sink_bbox[3] > $src_bbox[3]);; 
                  $netCoords[3] = $src_bbox[3] + 100 + abs(@$srcPinCoords[1] -$srcRef) if($sink_bbox[3] < $src_bbox[3]);; 
                  $netCoords[4] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin > $src_bbox[3]){
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[3] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1] -$srcRef);
                  $netCoords[5] = $netCoords[3] ; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = $sink_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                  $netCoords[10] = $netCoords[8]; 
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0];
                  $netCoords[3] = $src_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin < $src_bbox[3]){
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[2] + 100 +$srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = $sink_bbox[3] + 100 +$srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                  $netCoords[10] = @netCoords[8]; 
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }
             }elsif($sink_side eq "R"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0]- 100 - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  if($sinkMin < $src_bbox[1]){
                    $netCoords[5] = @$sinkPinCoords[2]; 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5];
                  }else{
                    $netCoords[5] = $src_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef) ; 
                    $netCoords[6] = $sink_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[7] = $netCoords[5];
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                    $netCoords[10] = @$sinkPinCoords[1];
                    $netCoords[11] = $netCoords[9];
                  }
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - 100 - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $src_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] > $src_bbox[1]); 
                  $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] < $src_bbox[1]); 
                  $netCoords[6] = $sink_bbox[2] + 100 + abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[5] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - 100 - abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[5] = $src_bbox[1] - 100  - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 - (@$srcPinCoords[2] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 + (@$srcPinCoords[2] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[1]){
                    $netCoords[2] = $sink_bbox[2] + 100 +$srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = @$sinkPinCoords[2]; 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5];
                  }else{
                    $netCoords[2] = $src_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = $sink_bbox[1] - 100 -$srcWidth + abs(@$srcPinCoords[2] -$srcRef) ; 
                    $netCoords[6] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[7] = $netCoords[5];
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                    $netCoords[10] = @$sinkPinCoords[1];
                    $netCoords[11] = $netCoords[9];
                  }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[3]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = @$sinkPinCoords[2]; 
                  }else{
                    $netCoords[2] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6]; 
                    $netCoords[9] = @$sinkPinCoords[2]; 
                  }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[1]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = @$sinkPinCoords[2]; 
                  }else{
                    $netCoords[2] = $src_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[1] - 100 -$srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6]; 
                    $netCoords[9] = @$sinkPinCoords[2]; 
                  }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax > $src_bbox[3]){ 
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{ 
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                  }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[3] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[4] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[3] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[1] -$srcRef);
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                  $netCoords[10] = $netCoords[8];
                  $netCoords[11] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax < $src_bbox[1]){
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0];
                  $netCoords[3] = $src_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if ($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if ($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                  $netCoords[10] = @netCoords[8]; 
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }
             }elsif($sink_side eq "T"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax < $src_bbox[0]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1];
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax > $src_bbox[2]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1];
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2]; 
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[0] - 100 -$srcWidth + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2]; 
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + 100 + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + 100 + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = ($src_bbox[3] + $sink_bbox[1])/2 - (@$srcPinCoords[1] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[3] = ($src_bbox[3] + $sink_bbox[1])/2 + (@$srcPinCoords[1] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[4] = @$sinkPinCoords[1]; 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[0] - 100 - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] < $sink_bbox[0]);
                  $netCoords[4] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] > $sink_bbox[0]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - 100 -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]);
                  $netCoords[4] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - 100 -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]);
                  $netCoords[4] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                  $netCoords[10] = $netCoords[8];
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax > $src_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - 100 -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($sinkMin < $src_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $src_bbox[0] - 100 - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }
             }elsif($sink_side eq "B"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - 100 - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - 100 - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin < $src_bbox[0]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[0] - 100 - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5];
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                  }
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - 100 - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1];
                  $netCoords[4] = $netCoords[2];
                  $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[0] - 100 - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin > $src_bbox[2]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1];
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + 100 + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $src_bbox[0] - 100 - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[4] = $sink_bbox[0] - 100 - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[4] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin < $src_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($sinkMax > $src_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]);
                  $netCoords[4] = $sink_bbox[2] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = $sink_bbox[1] - 100 - $srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                  $netCoords[10] = $netCoords[8];
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1]; 
                    $netCoords[5] = $netCoords[3];
                  }else{   
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = $sink_bbox[3] + 100 + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = $sink_bbox[0] - 100 - $srcWidth +  abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1]; 
                    $netCoords[9] = $netCoords[7];
                  } 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1]; 
                    $netCoords[5] = $netCoords[3];
                  }else{   
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = $sink_bbox[2] + 100  +  abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1]; 
                    $netCoords[9] = $netCoords[7];
                  } 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){ 
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = ($src_bbox[1] + $sink_bbox[3])/2 + (@$srcPinCoords[1] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[3] = ($src_bbox[1] + $sink_bbox[3])/2 - (@$srcPinCoords[1] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[4] = @$sinkPinCoords[1]; 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[1] - 100 -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[3] + 100 + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + 100 + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[1] - 100 - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }

                }
             #}elsif($sink_side eq "TL"){
             #}elsif($sink_side eq "TR"){
             #}elsif($sink_side eq "BL"){
             #}elsif($sink_side eq "BR"){
             } 
################################################################################################################################
################################################################################################################################
################################################################################################################################
             $_ *= $MulFactor for @netCoords; 
             $_ += 20 for @netCoords; 
#print "net $netsrc[$i], coords @netCoords\n";
             $design_worldcanvas->createLine(@netCoords, -fill => "yellow", -arrow=>'last') if ($#netCoords >=3 && $dir == 1);
             $design_worldcanvas->createLine(@netCoords, -fill => "yellow", -arrow=>'first') if ($#netCoords >=3 && $dir == 0);

             print WRITE "$netsrc[$i] @netCoords\n";
             #print "net $netsrc[$i] coords @netCoords\n";

         }
     }
}
}#sub call_create_route_path
################################################################################################

sub relative_sink_side {
my $srcInst = $_[0];
my $sinkInst = $_[1];
my $sink_side = "";

my @src_bbox = $CADB{$srcInst}->dbCadbGetbBox;
my @sink_bbox = $CADB{$sinkInst}->dbCadbGetbBox;

if($src_bbox[0]>$sink_bbox[2] && (($src_bbox[1]>=$sink_bbox[1] && $src_bbox[1]<=$sink_bbox[3]) || ($src_bbox[3]>=$sink_bbox[1] && $src_bbox[3]<=$sink_bbox[3]))){
   $sink_side = "L";
}elsif($src_bbox[2]<$sink_bbox[0] && (($src_bbox[1]>=$sink_bbox[1] && $src_bbox[1]<=$sink_bbox[3]) || ($src_bbox[3]>=$sink_bbox[1] && $src_bbox[3]<=$sink_bbox[3]))){
   $sink_side = "R";
}elsif($src_bbox[3]<$sink_bbox[1] && (($src_bbox[0]>=$sink_bbox[0] && $src_bbox[0]<=$sink_bbox[2]) || ($src_bbox[2]>=$sink_bbox[0] && $src_bbox[2]<=$sink_bbox[2]))){
   $sink_side = "T";
}elsif($src_bbox[1]>$sink_bbox[3] && (($src_bbox[0]>=$sink_bbox[0] && $src_bbox[0]<=$sink_bbox[2]) || ($src_bbox[2]>=$sink_bbox[0] && $src_bbox[2]<=$sink_bbox[2]))){
   $sink_side = "B";
}elsif($src_bbox[0]>$sink_bbox[2] && $src_bbox[3] < $sink_bbox[1]){
   #$sink_side = "TL";
   $sink_side = "T";
}elsif($src_bbox[2]<$sink_bbox[0] && $src_bbox[3] < $sink_bbox[1]){
   #$sink_side = "TR";
   $sink_side = "T";
}elsif($src_bbox[0]>$sink_bbox[2] && $src_bbox[1] > $sink_bbox[3]){
   #$sink_side = "BL";
   $sink_side = "B";
}elsif($src_bbox[2]<$sink_bbox[0] && $src_bbox[1] > $sink_bbox[3]){
   #$sink_side = "BR";
   $sink_side = "B";
}
return($sink_side);
}#sub relative_sink_side
################################################################################################
sub relative_pin_side{
my $instance = $_[0];
my $x = $_[1];
my $y = $_[2];
my @coords = $CADB{$instance}->dbCadbGetbBox;
my %MOD_SIDES = ();
   $MOD_SIDES{ls} = $x - $coords[0]; 
   $MOD_SIDES{rs} = $coords[2] - $x; 
   $MOD_SIDES{bs} = $y - $coords[1]; 
   $MOD_SIDES{ts} = $coords[3] - $y; 
my @keys = sort {$MOD_SIDES{$a} <=> $MOD_SIDES{$b}}(keys(%MOD_SIDES));
return($keys[0]);
}#sub relative_pin_side
#################################################################################################
sub create_samePinSide_netGroup{
my @nets = @_;
my @sameSidePinNets = ();
foreach my $net(@nets){
  my $match_found = 0;
  my @instances = @{$TEMP_NET_INST{$net}};
  my $srcPin = $TEMP_INST_PINCOORD{$net.",".$instances[0]};
  my $sinkPin = $TEMP_INST_PINCOORD{$net.",".$instances[1]}; 
  my $srcPinSide = relative_pin_side($instances[0],@$srcPin[1],@$srcPin[2]);
  my $sinkPinSide = relative_pin_side($instances[1],@$sinkPin[1],@$sinkPin[2]);
  if($#sameSidePinNets > -1){
     CLOOP: for(my $i=0; $i <= $#sameSidePinNets; $i++){
                my $net_group = $sameSidePinNets[$i];
                foreach my $netName (@$net_group){
                   my @insts = @{$TEMP_NET_INST{$netName}};
                   my $srcPin1 = $TEMP_INST_PINCOORD{$netName.",".$insts[0]};
                   my $sinkPin1 = $TEMP_INST_PINCOORD{$netName.",".$insts[1]}; 
                   my $srcPinSide1 = relative_pin_side($insts[0],@$srcPin1[1],@$srcPin1[2]);
                   my $sinkPinSide1 = relative_pin_side($insts[1],@$sinkPin1[1],@$sinkPin1[2]);
                   if($srcPinSide eq $srcPinSide1 && $sinkPinSide eq $sinkPinSide1){
                      my @new_array = (@$net_group,$net); 
                      $sameSidePinNets[$i] = \@new_array;
                      $match_found = 1;
                      last CLOOP;
                   }#if src and sink pins are at same side
                }#foreach net of netGroup
            }#foreach netGroup
            push(@sameSidePinNets,[$net]) if ($match_found == 0);
  }else{ push(@sameSidePinNets,[$net]);}
 }
 return(@sameSidePinNets);
}#sub create_samePinSide_netGroup

#################################################################################################
sub compare_arrays {
my ($first, $second) = @_;
#print "first @$first\n";
#print "second @$second\n";

no warnings;  # silence spurious -w undef complaints
return 0 unless @$first == @$second;
for (my $i = 0; $i < @$first; $i++) {
    return 0 if $first->[$i] ne $second->[$i];
}
return 1;
}#sub compare_arrays  
#################################################################################################
#################################################################################################
#################################################################################################

sub route_p2p_inpair {

#****f* / route_p2p_inpair
# NAME
#   route_p2p_inpair
# FUNCTION
#  point to point routing
# SYNOPSIS
#   route_p2p_inpair -nets <net1, net2 ......>
#             -layers <M1, M2 ........>
#             -width <pinWidth >
# route_p2p_inpair -nets net1,net2,net3,net4,net5,net6,net7,net8,net9,net10,net11,net12,net13,net14,net15,net16,net17,net18,net19,net20,net21,net22,net23,net24
# INPUTS
#   options: -nets <net1, net2 ......>,-layers <M1, M2 ........>,-width <pinWidth >
#   
# OUTPUTS
#    generate router file
#****

my $noOfArg = @_;
my ($netNames, $layers, $netWidth, $bend) = ("", "", "", 100);
%TEMP_NET_INST = ();
%TEMP_INST_PINCOORD = ();
my $CROSS = 0;

 if($noOfArg < 2 || $_[0] eq "-h" || $_[0] eq "-help" || $_[0] eq "-HELP"){
    print "Usage:  route_p2p_inpair -nets <net1, net2 ......>\n";
    print "                  -layers <M1, M2 ........>\n";
    print "                  -width <pinWidth >\n";
    print "                  -minBend <distance from edge of instance>\n";
    print "                  --signalCrossOK\n"; 
 }else{  
    for(my $i=0; $i<$noOfArg; $i++){
        if ($_[$i] eq "-nets"){$netNames = $_[$i+1];}
        if ($_[$i] eq "-layers"){$layers = $_[$i+1];}
        if ($_[$i] eq "-width"){$netWidth = $_[$i+1];}
        if ($_[$i] eq "-minBend"){$bend = $_[$i+1];}
        if ($_[$i] eq "--signalCrossOK"){$CROSS = 1;}
    }

  my @nets = split(/\,/,$netNames);
  if(@nets == 2){
    foreach my $net(@nets){
      my @INST = ();
      my %inst_pin_point_hash = (); 
      if(exists $NETS_ALREADY{$net}){
         foreach my $instance (keys %{$NETS_ALREADY{$net}}){
            my $pinName = $NETS_ALREADY{$net}{$instance};
            my @pin_mid_points = ($pinName);
            if(exists $COMP_ALREADY{$instance} ) {
                 my $cellref = $CADB{$instance}->dbCadbGetCellref;
                 my @instLoc = $CADB{$instance}->dbCadbGetLoc;
                 my $orient = $CADB{$instance}->dbCadbGetOrient;
                 if(exists $PLDB{$cellref} ){
                    my @cellOrigin = $PLDB{$cellref}->dbMdbGetOrigin;
                    my @cellSize = $PLDB{$cellref}->dbMdbGetSize;
                    my @pinRects = $PLDB{$cellref}->dbMdbGetPinRect($pinName);
                    my $pinDire = $PLDB{$cellref}->dbMdbGetPinDir($pinName);
#####################################################################################################################
############################ finding nearest Pin Rectangles #########################################################
#####################################################################################################################
                    foreach my $rect (@pinRects){
                       my ($layer, $llx2, $lly2, $urx2, $ury2)=(split(/\s+/,$rect))[0,2,3,4,5];
                       my @FirstRect = &xformCellPinToInstPin($instLoc[0],$instLoc[1],$cellOrigin[0],$cellOrigin[1],$orient,$cellSize[0],$cellSize[1],$llx2,$lly2,$urx2,$ury2);
                       my $pinX = ($FirstRect[0]+$FirstRect[2])/2;
                       my $pinY = ($FirstRect[1]+$FirstRect[3])/2;
                       push(@pin_mid_points, $pinX,$pinY); 
                    }
                    $inst_pin_point_hash{$instance} = \@pin_mid_points;
                    push(@INST, $instance);
                 }#if cellref exists in PLDB
              }#if instance exists
         }#foreach instance 
         my @src_pin_points = @{$inst_pin_point_hash{$INST[-2]}}; 
         my @sink_pin_points = @{$inst_pin_point_hash{$INST[-1]}}; 
         my %DISTANCE = ();
         for(my $i=1; $i<=$#src_pin_points; $i=$i+2){
            for(my $j=1; $j<=$#sink_pin_points; $j=$j+2){
                my $distance = sqrt(($src_pin_points[$i]-$sink_pin_points[$j])*($src_pin_points[$i]-$sink_pin_points[$j]) +($src_pin_points[$i+1]-$sink_pin_points[$j+1])*($src_pin_points[$i+1]-$sink_pin_points[$j+1]));
                $DISTANCE{$i.",".$j} = $distance;
            }
         }
         my @ponts = sort {$DISTANCE{$a} <=> $DISTANCE{$b}}(keys(%DISTANCE));
         my ($u, $v) = (split (/\,/,$ponts[0]))[0,1];
         my $srcPin = $src_pin_points[0];
         my $pinX = $src_pin_points[$u];
         my $pinY = $src_pin_points[$u+1];
         my $sinkPin = $sink_pin_points[0];
         my $pinX1 = $sink_pin_points[$v];
         my $pinY1 = $sink_pin_points[$v+1];
         $TEMP_INST_PINCOORD{$net.",".$INST[-2]} = [$srcPin,$pinX,$pinY];
         $TEMP_INST_PINCOORD{$net.",".$INST[-1]} = [$sinkPin,$pinX1,$pinY1];
#################################################################################################
         @INST = sort(@INST);  
         $TEMP_NET_INST{$net} = \@INST;  
      }else{print "WARN-RTR-ROUTE_p2p_INPAIR : 001 : net $net does not exists in net DB\n";return;}
    }#foreach net
  }else{print "WARN-RTR-ROUTE_p2p_INPAIR : 002 : number of nets should be two\n";return;}
}#if correct no of arguments
&create_route_path_new($bend,$CROSS);
}#sub route_p2p_inpair


sub create_route_path_new{
my $bend = $_[0];
my $CROSS = $_[1];
my $status = $GLOBAL->dbGlobalGetP2pRouterStatus;
if($status == 0){
   system("rm -rf router.out");
   $GLOBAL->dbGlobalSetP2pRouterStatus(1);
}
open(WRITE, ">>router.out");
my @nets = keys %TEMP_NET_INST;
my $MulFactor = $MICRONFACTOR/$DEF_DATABASE_UNIT;
my %temp_net_srcPinstorage = ();
my %temp_net_sinkPinstorage = ();
my @inst = @{$TEMP_NET_INST{$nets[0]}};
my @inst1 = @{$TEMP_NET_INST{$nets[1]}};
my $sink_side = relative_sink_side($inst[0],$inst[1]);
my $srcpin = $TEMP_INST_PINCOORD{$nets[0].",".$inst[0]};
my $sinkpin = $TEMP_INST_PINCOORD{$nets[0].",".$inst[1]}; 
my $srcPinSide = relative_pin_side($inst[0],@$srcpin[1],@$srcpin[2]);
my $sinkPinSide = relative_pin_side($inst[1],@$sinkpin[1],@$sinkpin[2]);
my @src_bbox = $CADB{$inst[0]}->dbCadbGetbBox;
my @sink_bbox = $CADB{$inst[1]}->dbCadbGetbBox;

my $srcSink_equal = &compare_arrays(\@inst,\@inst1);
if($srcSink_equal == 0){print "WARN-RTR : 001 : $nets[0] and $nets[1] does not connect same instances\n";return;}

   foreach my $netName (@nets){
     my $src_pin = $TEMP_INST_PINCOORD{$netName.",".$inst[0]};
     my $sink_pin = $TEMP_INST_PINCOORD{$netName.",".$inst[1]}; 
     if($srcPinSide eq "ts" || $srcPinSide eq "bs"){$temp_net_srcPinstorage{$netName} = @$src_pin[1];
     }elsif($srcPinSide eq "rs" || $srcPinSide eq "ls"){$temp_net_srcPinstorage{$netName} = @$src_pin[2];}
     if($sinkPinSide eq "ts" || $sinkPinSide eq "bs"){$temp_net_sinkPinstorage{$netName} = @$sink_pin[1];
     }elsif($sinkPinSide eq "rs" || $sinkPinSide eq "ls"){$temp_net_sinkPinstorage{$netName} = @$sink_pin[2];}
   } 
     my @netsrc = sort {$temp_net_srcPinstorage{$a} <=> $temp_net_srcPinstorage{$b}}(keys(%temp_net_srcPinstorage));
     my @netsink = ();
     if(($srcPinSide eq "ts" && $sinkPinSide eq "bs") || ($srcPinSide eq "bs" && $sinkPinSide eq "ts") || ($srcPinSide eq "ls" && $sinkPinSide eq "rs") || ($srcPinSide eq "rs" && $sinkPinSide eq "ls")|| ($srcPinSide eq "ls" && $sinkPinSide eq "bs") || ($srcPinSide eq "rs" && $sinkPinSide eq "ts") || ($srcPinSide eq "ts" && $sinkPinSide eq "rs") || ($srcPinSide eq "bs" && $sinkPinSide eq "ls")){ 
        @netsink = sort {$temp_net_sinkPinstorage{$a} <=> $temp_net_sinkPinstorage{$b}}(keys(%temp_net_sinkPinstorage));
     }else{
        @netsink = sort {$temp_net_sinkPinstorage{$b} <=> $temp_net_sinkPinstorage{$a}}(keys(%temp_net_sinkPinstorage));
     }
     my $are_equal = 1;
     $are_equal = &compare_arrays(\@netsrc,\@netsink ) if ( $CROSS == 0 );
     if($are_equal == 0){print "WARN-RTR : 002 : nets @netsrc can not routed together\n";return;
     }else{
         my $srcMin = $temp_net_srcPinstorage{$netsrc[0]};
         my $srcMax = $temp_net_srcPinstorage{$netsrc[-1]};
         my $sinkMin = $temp_net_sinkPinstorage{$netsink[0]}; 
         my $sinkMax = $temp_net_sinkPinstorage{$netsink[-1]}; 
         my $srcWidth = abs($srcMin - $srcMax);
         my $sinkWidth = abs($sinkMin - $sinkMax);
         my $srcRef = $srcMin ;
         my $sinkRef = $sinkMin;
         my @netCoords = ();
         my $srcPinCoords1 = $TEMP_INST_PINCOORD{$netsrc[0].",".$inst[0]};
         my $srcPinCoords2 = $TEMP_INST_PINCOORD{$netsrc[1].",".$inst[0]};
         my $sinkPinCoords1 = $TEMP_INST_PINCOORD{$netsrc[0].",".$inst[1]};
         my $sinkPinCoords2 = $TEMP_INST_PINCOORD{$netsrc[1].",".$inst[1]};
         
         my @arr1 = (1,(@$srcPinCoords1[1]+@$srcPinCoords2[1])/2, (@$srcPinCoords1[2]+@$srcPinCoords2[2])/2); 
         my @arr2 = (1,(@$sinkPinCoords1[1]+@$sinkPinCoords2[1])/2, (@$sinkPinCoords1[2]+@$sinkPinCoords2[2])/2); 
         my $srcPinCoords = \@arr1;  
         my $sinkPinCoords = \@arr2;  
################################################################################################################################
############################ Routing Conditions#################################################################################
################################################################################################################################
             if($sink_side eq "L"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0]- $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[2] = $src_bbox[0]- $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef) ; 
                  $netCoords[6] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 + (@$srcPinCoords[2] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 - (@$srcPinCoords[2] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin < $sink_bbox[3]){
                     $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                     $netCoords[3] = $netCoords[1]; 
                     $netCoords[4] = $netCoords[2];
                     $netCoords[5] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[2] -$srcRef) ; 
                     $netCoords[6] = @$sinkPinCoords[1]; 
                     $netCoords[7] = $netCoords[5]; 
                     $netCoords[8] = $netCoords[6]; 
                     $netCoords[9] = @$sinkPinCoords[2]; 
                  }else{
                     $netCoords[2] = @$sinkPinCoords[1]; 
                     $netCoords[3] = $netCoords[1];
                     $netCoords[4] = $netCoords[2]; 
                     $netCoords[5] = @$sinkPinCoords[2]; 
                  } 
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax > $sink_bbox[1]){
                     $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                     $netCoords[3] = $netCoords[1]; 
                     $netCoords[4] = $netCoords[2];
                     $netCoords[5] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef) ; 
                     $netCoords[6] = @$sinkPinCoords[1]; 
                     $netCoords[7] = $netCoords[5]; 
                     $netCoords[8] = $netCoords[6]; 
                     $netCoords[9] = @$sinkPinCoords[2]; 
                  }else{
                     $netCoords[2] = @$sinkPinCoords[1]; 
                     $netCoords[3] = $netCoords[1];
                     $netCoords[4] = $netCoords[2]; 
                     $netCoords[5] = @$sinkPinCoords[2]; 
                  } 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2]+ $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] < $src_bbox[1]); 
                  $netCoords[5] = $src_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] > $src_bbox[1]); 
                  $netCoords[6] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $src_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) ; 
                  $netCoords[6] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] > $sinkMin); 
                  $netCoords[6] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] < $sinkMin); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];

                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2];
                  $netCoords[5] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] > $sink_bbox[3]) ; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] < $sink_bbox[3]) ; 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2];
                  $netCoords[5] = $src_bbox[1] - $bend  - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] < $sink_bbox[1]) ; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] > $sink_bbox[1]) ; 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1] -$srcRef) if($sink_bbox[3] > $src_bbox[3]);; 
                  $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1] -$srcRef) if($sink_bbox[3] < $src_bbox[3]);; 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin > $src_bbox[3]){
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef);
                  $netCoords[5] = $netCoords[3] ; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                  $netCoords[10] = $netCoords[8]; 
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0];
                  $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin < $src_bbox[3]){
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[2] + $bend +$srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = $sink_bbox[3] + $bend +$srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                  $netCoords[10] = @netCoords[8]; 
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }
             }elsif($sink_side eq "R"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0]- $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  if($sinkMin < $src_bbox[1]){
                    $netCoords[5] = @$sinkPinCoords[2]; 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5];
                  }else{
                    $netCoords[5] = $src_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) ; 
                    $netCoords[6] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[7] = $netCoords[5];
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                    $netCoords[10] = @$sinkPinCoords[1];
                    $netCoords[11] = $netCoords[9];
                  }
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $src_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] > $src_bbox[1]); 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] < $src_bbox[1]); 
                  $netCoords[6] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[5] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[5] = $src_bbox[1] - $bend  - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 - (@$srcPinCoords[2] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 + (@$srcPinCoords[2] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[1]){
                    $netCoords[2] = $sink_bbox[2] + $bend +$srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = @$sinkPinCoords[2]; 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5];
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = $sink_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[2] -$srcRef) ; 
                    $netCoords[6] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[7] = $netCoords[5];
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                    $netCoords[10] = @$sinkPinCoords[1];
                    $netCoords[11] = $netCoords[9];
                  }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[3]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = @$sinkPinCoords[2]; 
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6]; 
                    $netCoords[9] = @$sinkPinCoords[2]; 
                  }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[1]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = @$sinkPinCoords[2]; 
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6]; 
                    $netCoords[9] = @$sinkPinCoords[2]; 
                  }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax > $src_bbox[3]){ 
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{ 
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                  }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[3] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[3] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1] -$srcRef);
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                  $netCoords[10] = $netCoords[8];
                  $netCoords[11] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax < $src_bbox[1]){
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0];
                  $netCoords[3] = $src_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if ($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if ($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                  $netCoords[10] = @netCoords[8]; 
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }
             }elsif($sink_side eq "T"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax < $src_bbox[0]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1];
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax > $src_bbox[2]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1];
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2]; 
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[0] - $bend -$srcWidth + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2]; 
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = ($src_bbox[3] + $sink_bbox[1])/2 - (@$srcPinCoords[1] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[3] = ($src_bbox[3] + $sink_bbox[1])/2 + (@$srcPinCoords[1] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[4] = @$sinkPinCoords[1]; 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] < $sink_bbox[0]);
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] > $sink_bbox[0]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]);
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]);
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                  $netCoords[10] = $netCoords[8];
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax > $src_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($sinkMin < $src_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $src_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }
             }elsif($sink_side eq "B"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin < $src_bbox[0]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5];
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                  }
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1];
                  $netCoords[4] = $netCoords[2];
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin > $src_bbox[2]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1];
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $src_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin < $src_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($sinkMax > $src_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]);
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                  $netCoords[10] = $netCoords[8];
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1]; 
                    $netCoords[5] = $netCoords[3];
                  }else{   
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = $sink_bbox[0] - $bend - $srcWidth +  abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1]; 
                    $netCoords[9] = $netCoords[7];
                  } 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1]; 
                    $netCoords[5] = $netCoords[3];
                  }else{   
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = $sink_bbox[2] + $bend  +  abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1]; 
                    $netCoords[9] = $netCoords[7];
                  } 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){ 
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = ($src_bbox[1] + $sink_bbox[3])/2 + (@$srcPinCoords[1] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[3] = ($src_bbox[1] + $sink_bbox[3])/2 - (@$srcPinCoords[1] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[4] = @$sinkPinCoords[1]; 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }
             } 
################################################################################################################################
################################################################################################################################
################################################################################################################################
             print WRITE "\n$netsrc[0],$netsrc[1] @netCoords\n";
             #print "net $netsrc[$i] coords @netCoords\n";
          if($GLOBAL->dbGlobalGetGuiStatus == 1){
             $_ *= $MulFactor for @netCoords; 
             $_ += 20 for @netCoords; 
             $design_worldcanvas->createLine(@netCoords, -fill => "yellow", -arrow=>'last') if ($#netCoords >=3);
          }

     }
close WRITE;
}#sub create_route_path_new

#################################################################################################
#################################################################################################
#################################################################################################

sub route_p2p_3pin_inpair{

#****f* / route_p2p_3pin_inpair
# NAME
#   route_p2p_3pin_inpair
# FUNCTION
#  point to point routing
# SYNOPSIS
#   route_p2p_3pin_inpair -nets <net1, net2 ......>
#             -layers <M1, M2 ........>
#             -width <pinWidth >
# route_p2p_3pin_inpair -nets net1,net2,net3,net4,net5,net6,net7,net8,net9,net10,net11,net12,net13,net14,net15,net16,net17,net18,net19,net20,net21,net22,net23,net24
# INPUTS
#   options: -nets <net1, net2 ......>,-layers <M1, M2 ........>,-width <pinWidth >
#   
# OUTPUTS
#    generate router file
#****

my $noOfArg = @_;
my ($netNames, $layers, $netWidth, $bend) = ("", "", "", 100);
%TEMP_NET_INST = ();
%TEMP_INST_PINCOORD = ();

 if($noOfArg < 2 || $_[0] eq "-h" || $_[0] eq "-help" || $_[0] eq "-HELP"){
    print "Usage:  route_p2p_3pin_inpair -nets <net1, net2 ......>\n";
    print "                              -layers <M1, M2 ........>\n";
    print "                              -width <pinWidth >\n";
    print "                              -minBend <distance from edge of instance>\n";
 }else{  
    for(my $i=0; $i<$noOfArg; $i++){
        if ($_[$i] eq "-nets"){$netNames = $_[$i+1];}
        if ($_[$i] eq "-layers"){$layers = $_[$i+1];}
        if ($_[$i] eq "-width"){$netWidth = $_[$i+1];}
        if ($_[$i] eq "-minBend"){$bend = $_[$i+1];}
    }

  my @nets = split(/\,/,$netNames);
  if(@nets == 2){
    foreach my $net(@nets){
      my @srcInst = &getNetDriver($net);
      my @sinkInst = &getNetSink($net);
     for(my $k=0; $k<=$#sinkInst; $k=$k+2){
      my @inst_pair = ($srcInst[0],$sinkInst[$k]); 
      my @INST = ();
      my %inst_pin_point_hash = (); 
      if(exists $NETS_ALREADY{$net}){
         foreach my $instance (@inst_pair){
            my $pinName = $NETS_ALREADY{$net}{$instance};
            my @pin_mid_points = ($pinName);
            if(exists $COMP_ALREADY{$instance} ) {
                 my $cellref = $CADB{$instance}->dbCadbGetCellref;
                 my @instLoc = $CADB{$instance}->dbCadbGetLoc;
                 my $orient = $CADB{$instance}->dbCadbGetOrient;
                 if(exists $PLDB{$cellref} ){
                    my @cellOrigin = $PLDB{$cellref}->dbMdbGetOrigin;
                    my @cellSize = $PLDB{$cellref}->dbMdbGetSize;
                    my @pinRects = $PLDB{$cellref}->dbMdbGetPinRect($pinName);
                    my $pinDire = $PLDB{$cellref}->dbMdbGetPinDir($pinName);
#####################################################################################################################
############################ finding nearest Pin Rectangles #########################################################
#####################################################################################################################
                    foreach my $rect (@pinRects){
                       my ($layer, $llx2, $lly2, $urx2, $ury2)=(split(/\s+/,$rect))[0,2,3,4,5];
                       my @FirstRect = &xformCellPinToInstPin($instLoc[0],$instLoc[1],$cellOrigin[0],$cellOrigin[1],$orient,$cellSize[0],$cellSize[1],$llx2,$lly2,$urx2,$ury2);
                       my $pinX = ($FirstRect[0]+$FirstRect[2])/2;
                       my $pinY = ($FirstRect[1]+$FirstRect[3])/2;
                       push(@pin_mid_points, $pinX,$pinY); 
                    }
                    $inst_pin_point_hash{$instance} = \@pin_mid_points;
                    push(@INST, $instance);
                 }#if cellref exists in PLDB
              }#if instance exists
         }#foreach instance 
         my @src_pin_points = @{$inst_pin_point_hash{$INST[-2]}}; 
         my @sink_pin_points = @{$inst_pin_point_hash{$INST[-1]}}; 
         my %DISTANCE = ();
         for(my $i=1; $i<=$#src_pin_points; $i=$i+2){
            for(my $j=1; $j<=$#sink_pin_points; $j=$j+2){
                my $distance = sqrt(($src_pin_points[$i]-$sink_pin_points[$j])*($src_pin_points[$i]-$sink_pin_points[$j]) +($src_pin_points[$i+1]-$sink_pin_points[$j+1])*($src_pin_points[$i+1]-$sink_pin_points[$j+1]));
                $DISTANCE{$i.",".$j} = $distance;
            }
         }
         my @ponts = sort {$DISTANCE{$a} <=> $DISTANCE{$b}}(keys(%DISTANCE));
         my ($u, $v) = (split (/\,/,$ponts[0]))[0,1];
         my $srcPin = $src_pin_points[0];
         my $pinX = $src_pin_points[$u];
         my $pinY = $src_pin_points[$u+1];
         my $sinkPin = $sink_pin_points[0];
         my $pinX1 = $sink_pin_points[$v];
         my $pinY1 = $sink_pin_points[$v+1];
         $TEMP_INST_PINCOORD{$net."_".$k.",".$INST[-2]} = [$srcPin,$pinX,$pinY];
         $TEMP_INST_PINCOORD{$net."_".$k.",".$INST[-1]} = [$sinkPin,$pinX1,$pinY1];
#################################################################################################
         $TEMP_NET_INST{$net."_".$k} = \@INST;  
      }else{print "WARN-RTR-ROUTE_p2p_3pin_INPAIR : 001 : net $net does not exists in net DB\n";return;}
     }
    }#foreach net
  }else{print "WARN-RTR-ROUTE_p2p_3pin_INPAIR : 002 : number of nets should be two\n";return;}
}#if correct no of arguments
my %net_pair_hash = ();
foreach my $key (keys %TEMP_NET_INST){
    my ($net_name, $seg) = (split(/\_/,$key))[0,1];
    if(exists $net_pair_hash{$seg}){
       my @val = @{$net_pair_hash{$seg}};
       push(@val, $key);
      $net_pair_hash{$seg} = \@val;
    }else{
      my @val = ($key);       
      $net_pair_hash{$seg} = \@val;
    }
}
foreach my $key1(keys %net_pair_hash){
     my @nets = @{$net_pair_hash{$key1}};
&create_route_path_3pinNet($bend,\@nets);
}
}#sub route_p2p_3pin_inpair


sub create_route_path_3pinNet{
my $bend = $_[0];
my @nets = @{$_[1]};
my $status = $GLOBAL->dbGlobalGetP2pRouterStatus;
if($status == 0){
   system("rm -rf router.out");
   $GLOBAL->dbGlobalSetP2pRouterStatus(1);
}
open(WRITE, ">>router.out");
#my @nets = keys %TEMP_NET_INST;
my $MulFactor = $MICRONFACTOR/$DEF_DATABASE_UNIT;
my %temp_net_srcPinstorage = ();
my %temp_net_sinkPinstorage = ();
my @inst = @{$TEMP_NET_INST{$nets[0]}};
my @inst1 = @{$TEMP_NET_INST{$nets[1]}};
my $sink_side = relative_sink_side($inst[0],$inst[1]);
my $srcpin = $TEMP_INST_PINCOORD{$nets[0].",".$inst[0]};
my $sinkpin = $TEMP_INST_PINCOORD{$nets[0].",".$inst[1]}; 
my $srcPinSide = relative_pin_side($inst[0],@$srcpin[1],@$srcpin[2]);
my $sinkPinSide = relative_pin_side($inst[1],@$sinkpin[1],@$sinkpin[2]);
my @src_bbox = $CADB{$inst[0]}->dbCadbGetbBox;
my @sink_bbox = $CADB{$inst[1]}->dbCadbGetbBox;

my $srcSink_equal = &compare_arrays(\@inst,\@inst1);
if($srcSink_equal == 0){print "WARN-RTR : 001 : $nets[0] and $nets[1] does not connect same instances\n";return;}

   foreach my $netName (@nets){
     my $src_pin = $TEMP_INST_PINCOORD{$netName.",".$inst[0]};
     my $sink_pin = $TEMP_INST_PINCOORD{$netName.",".$inst[1]}; 
     if($srcPinSide eq "ts" || $srcPinSide eq "bs"){$temp_net_srcPinstorage{$netName} = @$src_pin[1];
     }elsif($srcPinSide eq "rs" || $srcPinSide eq "ls"){$temp_net_srcPinstorage{$netName} = @$src_pin[2];}
     if($sinkPinSide eq "ts" || $sinkPinSide eq "bs"){$temp_net_sinkPinstorage{$netName} = @$sink_pin[1];
     }elsif($sinkPinSide eq "rs" || $sinkPinSide eq "ls"){$temp_net_sinkPinstorage{$netName} = @$sink_pin[2];}
   } 
     my @netsrc = sort {$temp_net_srcPinstorage{$a} <=> $temp_net_srcPinstorage{$b}}(keys(%temp_net_srcPinstorage));
     my @netsink = ();
     if(($srcPinSide eq "ts" && $sinkPinSide eq "bs") || ($srcPinSide eq "bs" && $sinkPinSide eq "ts") || ($srcPinSide eq "ls" && $sinkPinSide eq "rs") || ($srcPinSide eq "rs" && $sinkPinSide eq "ls")|| ($srcPinSide eq "ls" && $sinkPinSide eq "bs") || ($srcPinSide eq "rs" && $sinkPinSide eq "ts") || ($srcPinSide eq "ts" && $sinkPinSide eq "rs") || ($srcPinSide eq "bs" && $sinkPinSide eq "ls")){ 
        @netsink = sort {$temp_net_sinkPinstorage{$a} <=> $temp_net_sinkPinstorage{$b}}(keys(%temp_net_sinkPinstorage));
     }else{
        @netsink = sort {$temp_net_sinkPinstorage{$b} <=> $temp_net_sinkPinstorage{$a}}(keys(%temp_net_sinkPinstorage));
     }
     my $are_equal = &compare_arrays(\@netsrc,\@netsink );
     if($are_equal == 0){print "WARN-RTR : 002 : nets @netsrc can not routed together\n";}
     $are_equal = 1;
     if($are_equal == 0){print "WARN-RTR : 003 : nets @netsrc can not routed together\n";return;
     }else{
         my $srcMin = $temp_net_srcPinstorage{$netsrc[0]};
         my $srcMax = $temp_net_srcPinstorage{$netsrc[-1]};
         my $sinkMin = $temp_net_sinkPinstorage{$netsink[0]}; 
         my $sinkMax = $temp_net_sinkPinstorage{$netsink[-1]}; 
         my $srcWidth = abs($srcMin - $srcMax);
         my $sinkWidth = abs($sinkMin - $sinkMax);
         my $srcRef = $srcMin ;
         my $sinkRef = $sinkMin;
         my @netCoords = ();
         my $srcPinCoords1 = $TEMP_INST_PINCOORD{$netsrc[0].",".$inst[0]};
         my $srcPinCoords2 = $TEMP_INST_PINCOORD{$netsrc[1].",".$inst[0]};
         my $sinkPinCoords1 = $TEMP_INST_PINCOORD{$netsrc[0].",".$inst[1]};
         my $sinkPinCoords2 = $TEMP_INST_PINCOORD{$netsrc[1].",".$inst[1]};
         
         my @arr1 = (1,(@$srcPinCoords1[1]+@$srcPinCoords2[1])/2, (@$srcPinCoords1[2]+@$srcPinCoords2[2])/2); 
         my @arr2 = (1,(@$sinkPinCoords1[1]+@$sinkPinCoords2[1])/2, (@$sinkPinCoords1[2]+@$sinkPinCoords2[2])/2); 
         my $srcPinCoords = \@arr1;  
         my $sinkPinCoords = \@arr2;  
################################################################################################################################
############################ Routing Conditions#################################################################################
################################################################################################################################
             if($sink_side eq "L"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0]- $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[2] = $src_bbox[0]- $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef) ; 
                  $netCoords[6] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 + (@$srcPinCoords[2] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 - (@$srcPinCoords[2] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin < $sink_bbox[3]){
                     $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                     $netCoords[3] = $netCoords[1]; 
                     $netCoords[4] = $netCoords[2];
                     $netCoords[5] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[2] -$srcRef) ; 
                     $netCoords[6] = @$sinkPinCoords[1]; 
                     $netCoords[7] = $netCoords[5]; 
                     $netCoords[8] = $netCoords[6]; 
                     $netCoords[9] = @$sinkPinCoords[2]; 
                  }else{
                     $netCoords[2] = @$sinkPinCoords[1]; 
                     $netCoords[3] = $netCoords[1];
                     $netCoords[4] = $netCoords[2]; 
                     $netCoords[5] = @$sinkPinCoords[2]; 
                  } 
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax > $sink_bbox[1]){
                     $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                     $netCoords[3] = $netCoords[1]; 
                     $netCoords[4] = $netCoords[2];
                     $netCoords[5] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef) ; 
                     $netCoords[6] = @$sinkPinCoords[1]; 
                     $netCoords[7] = $netCoords[5]; 
                     $netCoords[8] = $netCoords[6]; 
                     $netCoords[9] = @$sinkPinCoords[2]; 
                  }else{
                     $netCoords[2] = @$sinkPinCoords[1]; 
                     $netCoords[3] = $netCoords[1];
                     $netCoords[4] = $netCoords[2]; 
                     $netCoords[5] = @$sinkPinCoords[2]; 
                  } 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2]+ $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] < $src_bbox[1]); 
                  $netCoords[5] = $src_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] > $src_bbox[1]); 
                  $netCoords[6] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $src_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) ; 
                  $netCoords[6] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] > $sinkMin); 
                  $netCoords[6] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] < $sinkMin); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];

                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2];
                  $netCoords[5] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] > $sink_bbox[3]) ; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] < $sink_bbox[3]) ; 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2];
                  $netCoords[5] = $src_bbox[1] - $bend  - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] < $sink_bbox[1]) ; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] > $sink_bbox[1]) ; 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1] -$srcRef) if($sink_bbox[3] > $src_bbox[3]);; 
                  $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1] -$srcRef) if($sink_bbox[3] < $src_bbox[3]);; 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin > $src_bbox[3]){
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef);
                  $netCoords[5] = $netCoords[3] ; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                  $netCoords[10] = $netCoords[8]; 
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0];
                  $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin < $src_bbox[3]){
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[2] + $bend +$srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = $sink_bbox[3] + $bend +$srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                  $netCoords[10] = @netCoords[8]; 
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }
             }elsif($sink_side eq "R"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0]- $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  if($sinkMin < $src_bbox[1]){
                    $netCoords[5] = @$sinkPinCoords[2]; 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5];
                  }else{
                    $netCoords[5] = $src_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) ; 
                    $netCoords[6] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[7] = $netCoords[5];
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                    $netCoords[10] = @$sinkPinCoords[1];
                    $netCoords[11] = $netCoords[9];
                  }
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $src_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] > $src_bbox[1]); 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($sink_bbox[1] < $src_bbox[1]); 
                  $netCoords[6] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                  $netCoords[10] = @$sinkPinCoords[1];
                  $netCoords[11] = $netCoords[9];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[5] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[5] = $src_bbox[1] - $bend  - abs(@$srcPinCoords[2] -$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 - (@$srcPinCoords[2] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[2] = ($src_bbox[2] + $sink_bbox[0])/2 + (@$srcPinCoords[2] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[1]){
                    $netCoords[2] = $sink_bbox[2] + $bend +$srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = @$sinkPinCoords[2]; 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5];
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = $sink_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[2] -$srcRef) ; 
                    $netCoords[6] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[7] = $netCoords[5];
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                    $netCoords[10] = @$sinkPinCoords[1];
                    $netCoords[11] = $netCoords[9];
                  }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[3]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = @$sinkPinCoords[2]; 
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6]; 
                    $netCoords[9] = @$sinkPinCoords[2]; 
                  }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[1]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = @$sinkPinCoords[2]; 
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6]; 
                    $netCoords[9] = @$sinkPinCoords[2]; 
                  }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax > $src_bbox[3]){ 
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{ 
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                  }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[3] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] > $sink_bbox[3]); 
                  $netCoords[3] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[3] < $sink_bbox[3]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1] -$srcRef);
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                  $netCoords[10] = $netCoords[8];
                  $netCoords[11] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax < $src_bbox[1]){
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0];
                  $netCoords[3] = $src_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if ($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if ($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7]; 
                  $netCoords[10] = @netCoords[8]; 
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] < $sink_bbox[1]); 
                  $netCoords[3] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[1] > $sink_bbox[1]); 
                  $netCoords[4] = @$sinkPinCoords[1];
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = @netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2]; 
                }
             }elsif($sink_side eq "T"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax < $src_bbox[0]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1];
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax > $src_bbox[2]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1];
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2]; 
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[0] - $bend -$srcWidth + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2]; 
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = ($src_bbox[3] + $sink_bbox[1])/2 - (@$srcPinCoords[1] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[3] = ($src_bbox[3] + $sink_bbox[1])/2 + (@$srcPinCoords[1] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[4] = @$sinkPinCoords[1]; 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] < $sink_bbox[0]);
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] > $sink_bbox[0]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]);
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1]; 
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]);
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                  $netCoords[10] = $netCoords[8];
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMax > $src_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($sinkMin < $src_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $src_bbox[0] - $bend - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }
             }elsif($sink_side eq "B"){
                if($srcPinSide eq "ls" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin < $src_bbox[0]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1]; 
                    $netCoords[4] = $netCoords[2]; 
                    $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1]; 
                    $netCoords[7] = $netCoords[5];
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                  }
                }elsif($srcPinSide eq "ls" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[2] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[3] = $netCoords[1];
                  $netCoords[4] = $netCoords[2];
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2] -$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2]-$srcRef);
                  $netCoords[6] = $sink_bbox[0] - $bend - $srcWidth + abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[7] = $netCoords[5]; 
                  $netCoords[8] = $netCoords[6]; 
                  $netCoords[9] = @$sinkPinCoords[2]; 
                  $netCoords[10] = @$sinkPinCoords[1]; 
                  $netCoords[11] = @netCoords[9]; 
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = @$sinkPinCoords[2];
                  $netCoords[6] = @$sinkPinCoords[1];
                  $netCoords[7] = $netCoords[5];
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin > $src_bbox[2]){
                    $netCoords[2] = @$sinkPinCoords[1]; 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef); 
                    $netCoords[3] = $netCoords[1];
                    $netCoords[4] = $netCoords[2];
                    $netCoords[5] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[2] -$srcRef); 
                    $netCoords[6] = @$sinkPinCoords[1];
                    $netCoords[7] = $netCoords[5]; 
                    $netCoords[8] = $netCoords[6];
                    $netCoords[9] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "rs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $src_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[2] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[2]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[3] = $netCoords[1]; 
                  $netCoords[4] = $netCoords[2]; 
                  $netCoords[5] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[2]-$srcRef); 
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = $netCoords[5];
                  $netCoords[8] = $netCoords[6];
                  $netCoords[9] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $src_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] < $sink_bbox[0]); 
                  $netCoords[4] = $sink_bbox[0] - $bend - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[0] > $sink_bbox[0]); 
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                  $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]); 
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]); 
                  $netCoords[5] = $netCoords[3]; 
                  $netCoords[6] = $netCoords[4]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "ts"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($sinkMin < $src_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($sinkMax > $src_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }elsif($srcPinSide eq "ts" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = $src_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[4] = $src_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] > $sink_bbox[2]);
                  $netCoords[4] = $sink_bbox[2] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef) if($src_bbox[2] < $sink_bbox[2]);
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = $netCoords[4];
                  $netCoords[7] = $sink_bbox[1] - $bend - $srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                  $netCoords[8] = @$sinkPinCoords[1];
                  $netCoords[9] = $netCoords[7];
                  $netCoords[10] = $netCoords[8];
                  $netCoords[11] = @$sinkPinCoords[2]; 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ls"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1]; 
                    $netCoords[5] = $netCoords[3];
                  }else{   
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = $sink_bbox[3] + $bend + $srcWidth - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = $sink_bbox[0] - $bend - $srcWidth +  abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1]; 
                    $netCoords[9] = $netCoords[7];
                  } 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "rs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = @$sinkPinCoords[2];
                    $netCoords[4] = @$sinkPinCoords[1]; 
                    $netCoords[5] = $netCoords[3];
                  }else{   
                    $netCoords[2] = $netCoords[0]; 
                    $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = $sink_bbox[2] + $bend  +  abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                    $netCoords[8] = @$sinkPinCoords[1]; 
                    $netCoords[9] = $netCoords[7];
                  } 
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "ts"){ 
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  $netCoords[2] = $netCoords[0]; 
                  $netCoords[3] = ($src_bbox[1] + $sink_bbox[3])/2 + (@$srcPinCoords[1] -$srcRef) if($srcMin < $sinkMin); 
                  $netCoords[3] = ($src_bbox[1] + $sink_bbox[3])/2 - (@$srcPinCoords[1] -$srcRef) if($srcMin > $sinkMin); 
                  $netCoords[4] = @$sinkPinCoords[1]; 
                  $netCoords[5] = $netCoords[3];
                  $netCoords[6] = @$sinkPinCoords[1]; 
                  $netCoords[7] = @$sinkPinCoords[2];
                }elsif($srcPinSide eq "bs" && $sinkPinSide eq "bs"){
                  $netCoords[0] = @$srcPinCoords[1]; 
                  $netCoords[1] = @$srcPinCoords[2]; 
                  if($srcMax < $sink_bbox[0]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[1] - $bend -$srcWidth + abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }elsif($srcMin > $sink_bbox[2]){
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[4] = @$sinkPinCoords[1];
                    $netCoords[5] = $netCoords[3]; 
                    $netCoords[6] = $netCoords[4];
                    $netCoords[7] = @$sinkPinCoords[2];
                  }else{
                    $netCoords[2] = $netCoords[0];
                    $netCoords[3] = $sink_bbox[3] + $bend + abs(@$srcPinCoords[1]-$srcRef); 
                    $netCoords[4] = $sink_bbox[2] + $bend + abs(@$srcPinCoords[1] -$srcRef); 
                    $netCoords[5] = $netCoords[3];
                    $netCoords[6] = $netCoords[4]; 
                    $netCoords[7] = $sink_bbox[1] - $bend - abs(@$srcPinCoords[1]-$srcRef);
                    $netCoords[8] = @$sinkPinCoords[1];
                    $netCoords[9] = $netCoords[7];
                    $netCoords[10] = $netCoords[8];
                    $netCoords[11] = @$sinkPinCoords[2];
                   }
                }
             } 
################################################################################################################################
################################################################################################################################
################################################################################################################################
             print WRITE "\n$netsrc[0],$netsrc[1] @netCoords\n";
             #print "net $netsrc[$i] coords @netCoords\n";
          if($GLOBAL->dbGlobalGetGuiStatus == 1){
             $_ *= $MulFactor for @netCoords; 
             $_ += 20 for @netCoords; 
             $design_worldcanvas->createLine(@netCoords, -fill => "yellow", -arrow=>'last') if ($#netCoords >=3);
          }

     }
close WRITE;
}#sub create_route_path_3pinNet

######################################################################################
######################################################################################
######################################################################################
sub bd_router {
#****f* / bd_router
# NAME
#   bd_router
# FUNCTION
#  point to point routing
# SYNOPSIS
#   bd_router -infile <input file name>
#             -outfile <output file name>
# INPUTS
#   options: -infile <input file>
#   
# OUTPUTS
#    generate router file
#****

my $noOfArg = @_;
my ($input_file, $output_file) = ("", "");

 if($noOfArg < 4 || $_[0] eq "-h" || $_[0] eq "-help" || $_[0] eq "-HELP"){
    print "\nUsage:  bd_router -infile <router input file>\n";
    print "                  -outfle <router output file>\n";
 }else{  
    for(my $i=0; $i<$noOfArg; $i++){
        if ($_[$i] eq "-infile"){$input_file = $_[$i+1];}
        if ($_[$i] eq "-outfile"){$output_file = $_[$i+1];}
    }

    open(DATA, $input_file) || die("Could not open file!");
    my @raw_data=<DATA>;
    close(DATA); 
    open (WRITE, ">$output_file");
    foreach $line (@raw_data){
      my @netCoords = ();
      if($line eq ""){
      }else{      
         my ($net, $x1, $y1, $x2, $y2) = (split(/\s+/,$line))[0,1,2,3,4];
         if($x1 == $x2 || $y1 == $y2){
            @netCoords = ($x1, $y1, $x2, $y2);
         }else{ 
            @netCoords = ($x1, $y1, $x1, $y2, $x2, $y2);
         }
         print WRITE "$net @netCoords\n";
      }
    }#foreach line 
    close(WRITE); 
 }#if correct no of argumets
}#sub bd_router



1;
