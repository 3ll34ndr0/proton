sub groute {
#****f* /groute
# NAME
#   groute
# FUNCTION
#    groute command performs global routing on a placed design. Design can be placed within the tool or placement of cells and macros can be annotated using the defIn command
#    groute has the following command line options and switches.
# SYNOPSIS
# groute --accurate --basic
# INPUTS
#      options :

#      switches :
#       --basic, invokes the global router in basic mode, basic mode is faster, spends minimal effort in layer assignment or remove congestion
#       --accurate, gives a more accurate analysis of the routing congestion, especially if you have lot of big hard macros 
# OUTPUTS
#      none
#****

my $basic = 1;

# the groute command encapsulates 3 steps
# step-1 : write the boxroute graph file
# step-2 : call the appropriate router executable
# step-3 : read the congestion map back into the tool
#------------------------ Step-1 -------------------------------------#
&write_router_graph(-file, 'groute.grf');
if ($basic == 1){
system("/home/rajeevs/Projects/proton/3RDBIN/gr1 groute.grf -o groute.route -labyrinth -maxRipIter 10");
                }
#------------------------ Step-3 -------------------------------------#
&read_congestion_map('-f', 'groute.grf', 'groute.route');



}#sub groute

sub groute_new {
#****f* /groute_new
# NAME
#   groute_new
# FUNCTION
#    groute_new command performs global routing on a placed design. Design can be placed within the tool or placement of cells and macros can be annotated using the defIn command
#    groute_new has the following command line options and switches.
# SYNOPSIS
# groute_new --accurate --basic
# INPUTS
#      options : -size <gridSize>

#      switches :
#       --basic, invokes the global router in basic mode, basic mode is faster, spends minimal effort in layer assignment or remove congestion
#       --accurate, gives a more accurate analysis of the routing congestion, especially if you have lot of big hard macros 
# OUTPUTS
#      none
#****

my $gridSize = 0;
my $inputOne eq "";
if($_[0] eq "-size"){$gridSize = $_[1];
                     $inputOne = "-size";}     
if($_[0] eq "-h") {print"usage: groute_new -size <gridSize>\n";
                   print"-size  : optional\n"; return;   }

my $basic = 1;
#print "inputone $inputOne,grid size $gridSize\n";
# the groute command encapsulates 3 steps
# step-1 : write the boxroute graph file
# step-2 : call the appropriate router executable
# step-3 : read the congestion map back into the tool
#------------------------ Step-1 -------------------------------------#
&write_router_graph_new(-file, 'groute.grf',$inputOne, $gridSize );
#------------------------ Step-2 -------------------------------------#
if ($basic == 1){
system("/home/rajeevs/Projects/proton/3RDBIN/gr1 groute.grf -o groute.route -labyrinth -maxRipIter 10");
                }
#------------------------ Step-3 -------------------------------------#
&read_congestion_map('-f', 'groute.grf', 'groute.route');



}#sub groute_new


1;
