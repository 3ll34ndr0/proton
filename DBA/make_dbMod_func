
sub delete_fillers {
my $noOfArguments = @_;
my $PAT = "UND";
my $FILL_CELL = "UND";
if( $noOfArguments < 2 || $_[0] eq '-h') { print "Usage : delete_fillers -cell <filler cell master> \n";
                           print "                       -pattern <reg-exp pattern> \n";
                         }
else {
for(my $i = 0; $i < $noOfArguments; $i++){
if($_[$i] eq "-cell"){$FILL_CELL = $_[$i+1];}
if($_[$i] eq "-pattern"){$PAT = $_[$i+1];}
                                         } # for
if ( $FILL_CELL ne "UND" ) {
if ( exists $PLDB{$FILL_CELL} ) {
     my $count = 0;
     print "deleteing all instances of cell $FILL_CELL ...";
     foreach my $inst ( keys %COMP_ALREADY ) {
             my $cellref = $CADB{$inst}->dbCadbGetCellref;
             if ($cellref eq $FILL_CELL ) { 
                                          delete $COMP_ALREADY{$inst};
                                          $count++;
                                          }
                                                }# foreach instance in database
    print "..done\! $count instances deleted\n";
                                }#if filler cell exists in the lef database
                           }# if $FILL_CELL is set
elsif ( $PAT ne "UND") {
     my $count = 0;
     $PAT = "\.\*".$PAT."\.\*";
     print "deleteing all instances which match the pattern $PAT ...";
     foreach my $inst ( keys %COMP_ALREADY ) {
             my $cellref = $CADB{$inst}->dbCadbGetCellref;
             if ($cellref =~ /$PAT/ ) { 
                                          delete $COMP_ALREADY{$inst};
                                          $count++;
                                          }
                                                }# foreach instance in database
    print "..done\! $count instances deleted\n";
 
                        }# if $PAT is set
else { print "WARN : check the command! for any typo \:-\)\n"; }

      }#if correct input





}#sub delete_fillers

1;
