
sub delete_all_tmp_placer_files {

  if( $_[0] eq '-h') {
    print "Usage : delete_all_tmp_placer_files \n";
  } else {

      if ( (-e "xy.out") && (-w "xy.out") ) {
        system ("rm -rf xy.out");
      }
    
      if ( (-e "detailed_xy.out") && (-w "detailed_xy.out") ){
        system ("rm -rf detailed_xy.out");
      }
      if ( (-e "detailed_plan_3_xy.out") && (-w "detailed_plan_3_xy.out") ){
        system ("rm -rf detailed_plan_3_xy.out");
      }
    
      if ( (-e "nodefile") && (-w "nodefile") ){
        system ("rm -rf nodefile");
      }
    
      if ( (-e "libfile") && (-w "libfile") ){
        system ("rm -rf libfile");
      }
      if ( (-e "libfile_pin_offset") && (-w "libfile_pin_offset") ){
        system ("rm -rf libfile_pin_offset");
      }
    
      if ( (-e "desinfofile") && (-w "desinfofile") ){
        system ("rm -rf desinfofile");
      }
    
      my $in = "$TOP_MODULE.txt";
      if ( (-e $in) && (-w $in) ){
        system ("rm -rf $in");
      }
      $in = "${TOP_MODULE}_pin_offset.txt";
      if ( (-e $in) && (-w $in) ){
        system ("rm -rf $in");
      }
    
      if ( (-e "dup_detailed_xy.out") && (-w "dup_detailed_xy.out") ){
        system ("rm -rf dup_detailed_xy.out");
      }
  
      if ( (-e "duplicatedesinfofile") && (-w "duplicatedesinfofile") ){
        system ("rm -rf duplicatedesinfofile");
      }

#      if ( (-e "place.log") && (-w "place.log") ){
#        system ("rm -rf place.log");
#      }

      if ( (-e "place_detail.log") && (-w "place_detail.log") ){
        system ("rm -rf place_detail.log");
      }

      if ( (-e "plan_3.log") && (-w "plan_3.log") ){
        system ("rm -rf plan_3.log");
      }

      if ( (-e "row_stat.log") && (-w "row_stat.log") ){
        system ("rm -rf row_stat.log");
      }

      if ( (-e "plan_2_row_stat.log") && (-w "plan_2_row_stat.log") ){
        system ("rm -rf plan_2_row_stat.log");
      }

      if ( (-e "plan_3_row_stat.log") && (-w "plan_3_row_stat.log") ){
        system ("rm -rf plan_3_row_stat.log");
      }

      if ( (-e "gui.out") && (-w "gui.out") ){
        system ("rm -rf gui.out");
      }

      if ( (-e "yx.out") && (-w "yx.out") ){
        system ("rm -rf yx.out");
      }
      if ( (-e "mp_gui.out") && (-w "mp_gui.out") ){
        system ("rm -rf mp_gui.out");
      }
      if ( (-e "mp_pins.out") && (-w "mp_pins.out") ){
        system ("rm -rf mp_pins.out");
      }
      if ( (-e "mp_xy.in") && (-w "mp_xy.in") ){
        system ("rm -rf mp_xy.in");
      }
      if ( (-e "mp_xy.out") && (-w "mp_xy.out") ){
        system ("rm -rf mp_xy.out");
      }
      if ( (-e "gui_pull.out") && (-w "gui_pull.out") ){
        system ("rm -rf gui_pull.out");
      }
      if ( (-e $TOP_MODULE.".libfile") && (-w $TOP_MODULE.".libfile") ){
        my $temp = $TOP_MODULE.".libfile";
        system ("rm -rf $temp");
      }
      if ( (-e $TOP_MODULE.".nodefile") && (-w $TOP_MODULE.".nodefile") ){
        my $temp = $TOP_MODULE.".nodefile";
        system ("rm -rf $temp");
      }
      if ( (-e $TOP_MODULE.".nodeMap.txt") && (-w $TOP_MODULE.".nodeMap.txt") ){
        my $temp = $TOP_MODULE.".nodeMap.txt";
        system ("rm -rf $temp");
      }
      if ( (-e $TOP_MODULE.".txt") && (-w $TOP_MODULE."txt") ){
        my $temp = $TOP_MODULE."txt";
        system ("rm -rf $temp");
      }

  }
}#sub delete_all_tmp_placer_files

sub delete_tmp_placer_files {

  my $to_delete_tmp_files = $GLOBAL->dbfGlobalGetDelTmpPlacerFiles ;
  if( $_[0] eq '-h') {
    print "Usage : delete_tmp_placer_files \n";
  } else {
    if ($to_delete_tmp_files == 1 ) {

      if ( (-e "xy.out") && (-w "xy.out") ) {
        system ("rm -rf xy.out");
      }
    
      if ( (-e "detailed_xy.out") && (-w "detailed_xy.out") ){
        system ("rm -rf detailed_xy.out");
      }
      if ( (-e "detailed_plan_3_xy.out") && (-w "detailed_plan_3_xy.out") ){
        system ("rm -rf detailed_plan_3_xy.out");
      }
    
      if ( (-e "nodefile") && (-w "nodefile") ){
        system ("rm -rf nodefile");
      }
    
      if ( (-e "libfile") && (-w "libfile") ){
        system ("rm -rf libfile");
      }
      if ( (-e "libfile_pin_offset") && (-w "libfile_pin_offset") ){
        system ("rm -rf libfile_pin_offset");
      }
    
      if ( (-e "desinfofile") && (-w "desinfofile") ){
        system ("rm -rf desinfofile");
      }
      #-------------------------------added by Mansi---------------------------------------#
      if ( (-e "nodeMap.txt") && (-w "nodeMap.txt") ){
        system ("rm -rf nodeMap.txt");
      }

      if ( (-e "controlfile") && (-w "controlfile") ){
        system ("rm -rf controlfile");
      }
      my $in_graph = "$TOP_MODULE.graph";
      if ( (-e $in_graph) && (-w $in_graph) ){
        system ("rm -rf $in_graph");
      }
      #------------------------------------------------------------------------------------#
    
      my $in = "$TOP_MODULE.txt";
      if ( (-e $in) && (-w $in) ){
        system ("rm -rf $in");
      }
      $in = "${TOP_MODULE}_pin_offset.txt";
      if ( (-e $in) && (-w $in) ){
        system ("rm -rf $in");
      }
    
      if ( (-e "dup_detailed_xy.out") && (-w "dup_detailed_xy.out") ){
        system ("rm -rf dup_detailed_xy.out");
      }
  
      if ( (-e "duplicatedesinfofile") && (-w "duplicatedesinfofile") ){
        system ("rm -rf duplicatedesinfofile");
      }

#      if ( (-e "place.log") && (-w "place.log") ){
#        system ("rm -rf place.log");
#      }

      if ( (-e "place_detail.log") && (-w "place_detail.log") ){
        system ("rm -rf place_detail.log");
      }

      if ( (-e "plan_3.log") && (-w "plan_3.log") ){
        system ("rm -rf plan_3.log");
      }

      if ( (-e "row_stat.log") && (-w "row_stat.log") ){
        system ("rm -rf row_stat.log");
      }

      if ( (-e "plan_2_row_stat.log") && (-w "plan_2_row_stat.log") ){
        system ("rm -rf plan_2_row_stat.log");
      }

      if ( (-e "plan_3_row_stat.log") && (-w "plan_3_row_stat.log") ){
        system ("rm -rf plan_3_row_stat.log");
      }

      if ( (-e "gui.out") && (-w "gui.out") ){
        system ("rm -rf gui.out");
      }

      if ( (-e "yx.out") && (-w "yx.out") ){
        system ("rm -rf yx.out");
      }
      if ( (-e "mp_gui.out") && (-w "mp_gui.out") ){
        system ("rm -rf mp_gui.out");
      }
      if ( (-e "mp_pins.out") && (-w "mp_pins.out") ){
        system ("rm -rf mp_pins.out");
      }
      if ( (-e "mp_xy.in") && (-w "mp_xy.in") ){
        system ("rm -rf mp_xy.in");
      }
      if ( (-e "mp_xy.out") && (-w "mp_xy.out") ){
        system ("rm -rf mp_xy.out");
      }
      if ( (-e "gui_pull.out") && (-w "gui_pull.out") ){
        system ("rm -rf gui_pull.out");
      }
      if ( (-e $TOP_MODULE.".libfile") && (-w $TOP_MODULE.".libfile") ){
        my $temp = $TOP_MODULE.".libfile";
        system ("rm -rf $temp");
      }
      if ( (-e $TOP_MODULE.".nodefile") && (-w $TOP_MODULE.".nodefile") ){
        my $temp = $TOP_MODULE.".nodefile";
        system ("rm -rf $temp");
      }
      if ( (-e $TOP_MODULE.".nodeMap.txt") && (-w $TOP_MODULE.".nodeMap.txt") ){
        my $temp = $TOP_MODULE.".nodeMap.txt";
        system ("rm -rf $temp");
      }
      if ( (-e $TOP_MODULE.".txt") && (-w $TOP_MODULE."txt") ){
        my $temp = $TOP_MODULE."txt";
        system ("rm -rf $temp");
      }

      if ( (-e "controlfile") && (-w "controlfile") ) {
        system ("rm -rf controlfile");
      }
      if ( (-e "gui.tcl") && (-w "gui.tcl") ) {
        system ("rm -rf gui.tcl");
      }
      if ( (-e "nodeMap.txt") && (-w "nodeMap.txt") ) {
        system ("rm -rf nodeMap.txt");
      }
      if ( (-e "disjoint_graph.txt") && (-w "disjoint_graph.txt") ) {
        system ("rm -rf disjoint_graph.txt");
      }
      if ( (-e "place.log") && (-w "place.log") ) {
        system ("rm -rf place.log");
      }
    }
  }
}#sub delete_tmp_placer_files

sub set_no_delete_tmp_placer_files{
  if( $_[0] eq '-h') {
    print "Usage : set_no_delete_tmp_placer_files \n";
  }
  $GLOBAL->dbfGlobalSetDelTmpPlacerFiles(0) ;
} #sub set_map_seed_placement

sub set_delete_tmp_placer_files{
  if( $_[0] eq '-h') {
    print "Usage : set_delete_tmp_placer_files \n";
  }
  $GLOBAL->dbfGlobalSetDelTmpPlacerFiles(1) ;
} #sub set_map_seed_placement


sub comp_rowStat_log {

if ( (-e "row_stat.log") && (-e "my_row_stat.log") ) {
  my $stat = `diff row_stat.log my_row_stat.log`;
  if ($stat eq "") {
    print "INFO-UTS-COMP_ROWST_LOG : 001 : Both files are same\n";
    return(0);
  } else {
    print "INFO-UTS-COMP_ROWST_LOG : 002 : Both files are not same difference is -->\n";
    return(1);
  }
} else {
  print "WARN-UTS-COMP_ROWST_LOG : 003 : Files row_stat.log or my_row_stat.log does not exist\n";
}
}# comp_rowStat_log

1;
