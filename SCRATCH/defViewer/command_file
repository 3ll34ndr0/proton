sub initialize_commands {
  %cmds = (
          "read_lef"=>"read_lef",
          "read_def"=>"read_def",
           );

  %checkArguments = (
                     "read_lef" => "0",
                     "read_def" => "0",
                     );
}#sub initiallize_commands


sub source {
  my $EXECUTE_FILE = $_[0];
  
  my $p2cmd = \%cmds;
  my $p2cmdArgs = \%checkArguments;
  
  open (READ_EXE_FILE, "$EXECUTE_FILE");
  while(<READ_EXE_FILE>){
    chomp($_);
    $_ =~ s/^\s+//;
    if($_ =~ /^\s*#/){ # if the line is commented do nothing 
    }elsif ( $_ =~ /^\s*$/ ) { # if the line is empty
    }else {
       my ($cmd, @arguments) = split(/\s+/, $_);
       my $tempArgStr = join" ",@arguments;
       $tempArgStr =~ s/\{\s*/\{/g;
       $tempArgStr =~ s/\s*\}/\}/g;
       my $modArgs = "";
       if($tempArgStr =~ /\{/){
          while($tempArgStr =~ m/(.*?)\{\s*(.*?)\s*\}(.*?)/g){ 
            my $preBrace  = $1;
            my $withinBrace = $2; 
            my $postBrace = $3;
            $withinBrace =~ s/\s*\,\s*/\,/g ; 
            $withinBrace =~ s/\s+/ /g ; 
            $withinBrace =~ s/\s/\,/g ; 
            $modArgs = $modArgs." ".$preBrace." \{".$withinBrace."\}";
            print "$preBrace $withinBrace $postBrace\n"; 
            #print "loop $modArgs\n";
          }# while
          while($tempArgStr =~ m/\{\s*(.*)\s*\}(.*)/g){
            my $withinBrace = $1;
            my $postBrace = $2;
            $modArgs = $modArgs." ".$postBrace;
            #print " last $modArgs\n";
          }# while
       }else{ $modArgs = $tempArgStr; }
       @arguments = split(/\s+/,$modArgs);
       my $noOfargs = @arguments;
       if(exists $p2cmdArgs->{$cmd}){
          if($p2cmdArgs->{$cmd} <= $noOfargs){ 
             print "#<CMD> $_\n";
             &{$p2cmd->{$cmd}}(@arguments); 
          }else{
             &{$p2cmd->{$cmd}}("HELP"); 
          } 
       }else{
          print "$cmd no such command\n"; 
       }
    }#if the line is not commented
  }#while not EOF
}#sub source


1;




