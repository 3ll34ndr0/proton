#!/usr/bin/perl

#my $noOfArguments = @_;
my @AGRV = @_;
if( $ARGV[0] eq '-h' || $ARGV[0] eq '-help' ) { 
  print "Usage : ./spider_script \n";
  print "                  -path <pathName for files to search [default path is \".\"]> \n";
  print "                  -fname <output file name [default name is \"config_file\"]> \n";
  print "                  --all <all lef, def, verilog, lib, sdc, rtl files> \n";
  print "                  --lef <all lef files> \n";
  print "                  --def <all def files> \n";
  print "                  --lib <all lib files> \n";
  print "                  --v   <all v files> \n";
  print "                  --sdc <all sdc files> \n";
  print "                  --rtl <all rtl files> \n";
  print "                  -top <TOP_MODULE name or CELL_NAME> \n";
} else { # if correct no. of inputs

  my $read_all = 1;
  my $read_lef = 0;
  my $read_def = 0;
  my $read_lib = 0;
  my $read_verilog = 0;
  my $read_sdc = 0;
  my $read_rtl = 0;
  my $tp = 0;
  my $config_file = "config_file";
  my $pathName = ".";
  my $top_module = "";
  for(my $i = 0; $i <= $#ARGV; $i++) {
    if($ARGV[$i] eq "-path")       { $pathName = $ARGV[$i+1]; }
    if($ARGV[$i] eq "-fname")      { $config_file = $ARGV[$i+1]; }
    if($ARGV[$i] eq "--all")       { $read_all=1; $read_lef=1; $read_def=1; $read_lib=1; $read_verilog=1; $read_sdc=1; $read_rtl=1; }
    if($ARGV[$i] eq "--lef")       { $read_lef=1; $read_all = 0; }
    if($ARGV[$i] eq "--def")       { $read_def=1; $read_all = 0; }
    if($ARGV[$i] eq "--lib")       { $read_lib=1; $read_all = 0; }
    if($ARGV[$i] eq "--v")         { $read_verilog=1; $read_all = 0; }
    if($ARGV[$i] eq "--sdc")       { $read_sdc=1; $read_all = 0; }
    if($ARGV[$i] eq "--rtl")       { $read_rtl=1; $read_all = 0; }
    if($ARGV[$i] eq "-top")        { $top_module = $ARGV[$i+1]; $tp=1; }
  }
  
  open (WRITE, ">$config_file");
    
    if($read_all == 1 || $read_lef == 1){
      my @leffiles = `find $pathName -name \\*\\.lef`;
      #print "NAMES @leffiles\n";
      foreach my $file(@leffiles){
        print WRITE "LEF: $file";
      }
      my @leffiles = `find $pathName -name \\*\\.\\*lef\\*`;
      #print "NAMES @leffiles\n";
      foreach my $file(@leffiles){
        print WRITE "LEF: $file";
      }
    }
    if($read_all == 1 || $read_lib == 1){
      my @libfiles = `find $pathName -name \\*\\.lib`;
      #print "NAMES @libfiles\n";
      foreach my $file(@libfiles){
        print WRITE "LIB: $file";
      }
    }
    if($read_all == 1 || $read_def == 1){
      my @deffiles = `find $pathName -name \\*\\.def`;
      #print "NAMES @deffiles\n";
      foreach my $file(@deffiles){
        print WRITE "DEF: $file";
      }
    }
    if($read_all == 1 || $read_verilog == 1){
      my @verilogfiles = `find $pathName -name \\*\\.v`;
      #print "NAMES @verilogfiles\n";
      foreach my $file(@verilogfiles){
        print WRITE "NETLIST: $file";
      }
    }
    if($read_all == 1 || $read_verilog == 1){
      my @verilogfiles = `find $pathName -name \\*\\.gv`;
      #print "NAMES @verilogfiles\n";
      foreach my $file(@verilogfiles){
        print WRITE "NETLIST: $file";
      }
    }
    if($read_all == 1 || $read_sdc == 1){
      my @sdcfiles = `find $pathName -name \\*\\.sdc`;
      #print "NAMES @sdcfiles\n";
      foreach my $file(@sdcfiles){
        print WRITE "SDC: $file";
      }
    }
    if($read_all == 1 || $read_rtl == 1){
      my @rtlfiles = `find $pathName -name \\*\\.rtl`;
      #print "NAMES @rtlfiles\n";
      foreach my $file(@rtlfiles){
        print WRITE "RTL: $file";
      }
    }
    if($tp == 1){
      if(defined $top_module){
        print WRITE "TOP: $top_module";
      }
    }
  close WRITE;

  }#else


