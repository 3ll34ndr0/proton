#!/usr/bin/perl
use lib "/home/adityap/SOFTWARE/GDS2-2.09/lib";
use GDS2;
use Math::Clipper ':all';
use Math::Polygon;
my @boundary_layer_arr = ([1,1,3,1,3,3,1,3,1,1], [2,2,4,2,4,4,2,4,2,2],[3,3,4,3,4,4,3,4,3,3]); 
   my @poly_groups = ();
   my @obs_group = ();
   for(my $i=0; $i<=$#boundary_layer_arr; $i=$i){
       my $subject_poly = shift @boundary_layer_arr;
       my @sub_poly = @$subject_poly;
       print "subject @sub_poly\n";
       my @overlapped_group = ();
       #push(@overlapped_group, [@sub_poly]);
       my $clipper = Math::Clipper->new;
       my @p = ();
       for(my $i=1; $i<=$#sub_poly; $i=$i+2){
           push(@p,[$sub_poly[$i],$sub_poly[$i+1]]);
       }
       $clipper->add_subject_polygon([@p]);
       for(my $j=0; $j<=$#boundary_layer_arr; $j++){
           my @clip_poly = @{$boundary_layer_arr[$j]};
           my @p1 = ();
           for(my $i=1; $i<=$#clip_poly; $i=$i+2){
               push(@p1,[$clip_poly[$i],$clip_poly[$i+1]]);
           }
           $clipper->add_clip_polygon([@p1]);
           my $result = $clipper->execute(CT_INTERSECTION);
           my @result_arr = @$result;
           my $result_arr_len = @result_arr;
           print "result $result_arr_len\n";
           if($result_arr_len > 0){
              push(@overlapped_group, [@clip_poly]);
              delete $boundary_layer_arr[$j];
           }
       }
       if($#overlapped_group >= 0){
          push(@overlapped_group, [@sub_poly]);
       }else{
          push(@obs_group, [@sub_poly]);
       }
       push(@poly_groups, [@overlapped_group]);
   }   

