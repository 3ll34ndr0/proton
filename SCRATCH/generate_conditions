#!/usr/bin/perl
my @output_list = ("qn");
my @input_list = ("c", "a", "b", "d");
my %high_out_hash = ();
my %low_out_hash = ();

open(READ,"jsaoi22_a.log");
 while(<READ>) {
 chomp();
 $_ =~ s/\|\s+//;
 if($_ =~ /time/ ) {next ;}
 foreach my $out (@output_list){
   my @binary = ();
   if($_ =~ /$out\=1/ ){
      my @line = split(/\s+/,$_);
      foreach my $input (@input_list){
        foreach my $value (@line){
          my ($in, $val) = (split(/\=/,$value))[0,1];
          if($input eq $in){
             push(@binary,$val);
             last;
          }#if input matching
        }#foreach line element
      }#foreach input
      my @values = @{$high_out_hash{$out}};
      push(@values,[@binary]);
      @{$high_out_hash{$out}} = @values;
      last;
   }else{
      my @line = split(/\s+/,$_);
      foreach my $input (@input_list){
        foreach my $value (@line){
          my ($in, $val) = (split(/\=/,$value))[0,1];
          if($input eq $in){
             push(@binary,$val);
             last;
          }#if input matching
        }#foreach line element
      }#foreach input
      my @values = @{$low_out_hash{$out}};
      push(@values,[@binary]);
      @{$low_out_hash{$out}} = @values;
      last;
   }
 }#foreach output
 }
 close (READ);


foreach my $out (keys %high_out_hash){
  my @high_value = @{$high_out_hash{$out}};
  my @low_value = @{$low_out_hash{$out}};
  for(my $i=0; $i<=$#high_value; $i++){
     my @high_in_val = @{$high_value[$i]};
     for(my $j=0; $j<=$#low_value; $j++){
         my @low_in_val = @{$low_value[$j]};
         my $count = 0; 
         my $related_pin_index;
         for(my $k=0; $k<=$#low_in_val; $k++){
            if($low_in_val[$k] != $high_in_val[$k]){
               $count++;
               $related_pin_index = $k;
            }
         }
         if($count == 1){
            print "$out related_pin $input_list[$related_pin_index] @high_in_val\n";
            #last;
         }#if one input matching
     }#foreach low output value
  }#foreach high output value
}#foreach output

