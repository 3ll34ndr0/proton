my ($help, $debug, $verbose) = (0,0,0);
my ($myVar1, $myVar2); # declare global variables for this script here

########################################################################
sub make_MYPROG {
  use Benchmark;
  my $t0 = new Benchmark;

  my (@args) = @_;
  $help = 0;
  &make_MYPROG_readArgs(@args);
  if ($help) {
	&make_MYPROG_usage();
  } else {
	&make_MYPROG_sub1;
	&make_MYPROG_sub2;
  } #if...else

  &finish();
  $t1 = new Benchmark;
  my $td = timediff($t1, $t0);
  print "make_MYPROG took:",timestr($td),"\n";
} #sub make_MYPROG

########################################################################
sub make_MYPROG_readArgs {
  my (@args) =  @_;
  $args = join(' ',@args);
  if (!defined($args)) {
	$args = "";
  }
  my $parseResult = Getopt::Long::GetOptionsFromString($args , 
													   # read args here
													   "h"          => \$help,
													   "help"       => \$help,
													   "debug"      => \$debug,
													   "verbose"    => \$verbose,
													  );
} #sub make_MYPROG_readArgs

########################################################################
sub finish() {
  #anything special to be done when this script exits

} #sub finish

########################################################################
sub make_MYPROG_sub1 {
  # declare local variables here


}#sub make_MYPROG_sub1

########################################################################
sub make_MYPROG_sub2 {
  # declare local variables here


}#sub make_MYPROG_sub2

########################################################################
sub make_MYPROG_usage {
    print"\nmake_MYPROG Usage: make_MYPROG [-verbose -debug -norun -help]\n";
	# add details of each switch here
    return;
}

1;
