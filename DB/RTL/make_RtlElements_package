#!/bin/perl 

package CompAttDB;

## explanation of the object entries
## PT : PlaceDB_trace flag : I am doing this so that I trace a component ....
## C : cell reference
## F : status of the component
## O : orientation of the component
## L : x, y location of the component
## bbox : is the bounding box of the instance
## ClkD : Clock domain , its useful in making the netlist "GEN" connections
## NodeNum : is the number used to read or write graph

sub new {
my $inst = {
                    L => [],
		    BIN => "UND",
                    O => "UND",
                    C => "UND",
                    F => "UND",
                    PT => 0,
                    ClkD => "UND",
                    PINS => CompPinAttDB::createEmpty(),
                    NodeNum => "UND",  
                    OL => [],
                    bbox => [],
                    };
bless $inst, 'CompAttDB';
return $inst;
}#sub new

#-----------------------------------#
sub dbCadbSetbBox{
my ($self,$llx,$lly,$urx,$ury)=@_;
    ${$self->{bbox}}[0] = $llx;
    ${$self->{bbox}}[1] = $lly;
    ${$self->{bbox}}[2] = $urx;
    ${$self->{bbox}}[3] = $ury;
}#sub dbCadbSetbBox

sub dbCadbGetbBox{
my ($self) = @_;
my @bbox = @{$self->{bbox}};
return(@bbox);
}#sub dbCadbGetbBox

#---------------------------------#
sub dbCadbSetBin {
my ($self,$bin) = @_;
    $self->{BIN} = $bin;
}#sub dbCadbSetBin

sub dbCadbGetBin {
my ($self) = @_;
  my $bin =  $self->{BIN};
return($bin);
}#sub dbCadbGetBin
#---------------------------------#

#---------------------------------#
sub dbCadbSetPinTran {
my ($self,$pin,$tran) = @_;
$self->{PINS}{$pin}->{T} = $tran;
}#sub dbCadbSetPinTran

sub dbCadbGetPinTran {
my ($self,$pin) = @_;
my $tran = $self->{PINS}{$pin}->{T};
return($tran);
}#sub dbCadbGetPinTran

#---------------------------------#
sub dbCadbSetPinXLayer {
my ($self,$pin,$num) = @_;
$self->{PINS}{$pin}->{Z} = $num;
}#sub dbCadbSetPinXLayer

sub dbCadbGetPinXLayer {
my ($self,$pin) = @_;
my $num = $self->{PINS}{$pin}->{Z};
return($num);
}#sub dbCadbGetPinXLayer

#---------------------------------#

sub dbCadbSetLoc {
my ($self,$x,$y) = @_;
    ${$self->{L}}[0] = $x;
    ${$self->{L}}[1] = $y;
}#sub dbCadbSetLoc

sub dbCadbGetLoc {
my ($self) = @_;
my @loc =    @{$self->{L}};
return(@loc);
}#sub dbCadbGetLoc

sub dbgCadbGetLoc {
my ($self) = @_;
my @loc =    @{$self->{L}};
   print join (",", @loc);
   print "\n";
}#sub dbgCadbGetLoc

sub dbCadbSetOrient {
my ($self,$orient) = @_;
    $self->{O} = $orient;
}#sub dbCadbSetOrient

sub dbCadbGetOrient {
my ($self) = @_;
  my $orient =  $self->{O};
return($orient);
}#sub dbCadbGetOrient
#-----------------------------------#
sub dbCadbSetNodeNum {
my ($self,$node) = @_;
    $self->{NodeNum} = $node;
}#sub dbCadbSetNodeNum

sub dbCadbGetNodeNum {
my ($self) = @_;
  my $node =  $self->{NodeNum};
return($node);
}#sub dbCadbGetNodeNum
#-----------------------------------#


sub dbgCadbGetOrient {
my ($self) = @_;
    my $orient =  $self->{O};
  print "orient : $orient\n";
}#sub dbgCadbGetOrient

sub dbCadbSetStatus {
my ($self,$flag) = @_;
    $self->{F} = $flag;
}#sub dbCadbSetStatus

sub dbCadbGetStatus {
my ($self) = @_;
  my $flag =  $self->{F};
return($flag);
}#sub dbCadbGetStatus

sub dbgCadbGetStatus {
my ($self) = @_;
    my $flag =  $self->{F};
  print "status : $flag\n";
}#sub dbgCadbGetStatus

sub dbCadbSetCellref {
my ($self,$cell) = @_;
    $self->{C} = $cell;
}#sub dbCadbSetCellref

sub dbCadbGetCellref {
my ($self) = @_;
  my $cell =  $self->{C};
return($cell);
}#sub dbCadbGetCellref

sub dbgCadbGetCellref {
my ($self) = @_;
    my $cell =  $self->{C};
  print "Cell : $cell\n";
}#sub dbgCadbGetCellref


sub dbCadbSetPTFlag {
my  ($self) = @_;
   $self->{PT} = 1;
}#sub dbCadbSetPTFlag 


sub dbCadbResetPTFlag {
my  ($self) = @_;
   $self->{PT} = 0;
}#sub dbCadbResetPTFlag 

sub dbCadbGetPTFlag {
my  ($self) = @_;
   my $flag = $self->{PT};
return($flag);
}#sub dbCadbGetPTFlag 

sub dbCadbSetClkDomain {
my  ($self,$clkd) = @_;
   $self->{ClkD} = $clkd;
}#sub dbCadbSetClkDomain

sub dbCadbGetClkDomain {
my  ($self) = @_;
   my $flag = $self->{ClkD};
return($flag);
}#sub dbCadbGetClkDomain

sub dbgCadbGetClkDomain {
my  ($self) = @_;
   my $flag = $self->{ClkD};
print "$flag\n";
}#sub dbCadbGetClkDomain

sub dbCadbSetorigLoc {
my ($self,$x,$y) = @_;
    ${$self->{OL}}[0] = $x;
    ${$self->{OL}}[1] = $y;
}#sub dbCadbSetorigLoc

sub dbCadbGetorigLoc {
my ($self) = @_;
my @loc =    @{$self->{OL}};
return(@loc);
}#sub dbCadbGetorigLoc

1,
