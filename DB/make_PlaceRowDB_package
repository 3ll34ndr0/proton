package RowInstDB;

####  explanation of database ####
#IL : instance list in an array
#NI  : Number of instances
#FP : Filled percentage
#W : Sum of cell width in a row
#O : Orientation of the row

sub new {

my $row = {
              IL => [],
              NI => 0,
              FP => 0,
              W => 0,
              Y => 0,
	      O => "UND",
              };
bless $row, 'RowInstDB';
return $row;
}#sub new

#-------------------------------------------------#
sub dbPlaceSetOrient {
my ($self,$orient) = @_;
$self->{O} = $orient;
}#sub dbPlaceSetOrient

sub dbPlaceGetOrient {
my ($self) = @_;
my $orient = $self->{O};
return($orient);
}#sub dbPlaceGetOrient
#-------------------------------------------------#


#-------------------------------------------------#
sub dbPlaceAddInstInRow {
my ($self,$inst) = @_;
push(@{$self->{IL}}, $inst);
}#sub dbPlaceAddInstInRow

## sub dbPlaceDeleteInstInRow {
## my ($self,$inst) = @_;
## foreach (@{$self->{IL}}) {
## 	my $test_inst = pop(@{$self->{IL}});
## 	if ($test_inst eq $inst) {}
## 	else { unshift(@{$self->{IL}}, $test_inst);}
## }
## }#sub dbPlaceDeleteInstInRow
## 
sub dbPlaceDeleteInstInRow {
my ($self,$inst) = @_;
my @temp = @{$self->{IL}};
my $cnt = $#temp;
for (my $i=0; $i<=$cnt; $i++) {
	if ($temp[$i] eq $inst) {
	delete $temp[$i];
	}
}
@{$self->{IL}} = @temp;
}#sub dbPlaceDeleteInstInRow


sub dbPlaceGetInstInRow {
my ($self) = @_;
my @inst = @{$self->{IL}};
return(@inst);
}#sub dbPlaceGetInstInRow
#-------------------------------------------------#
sub dbPlaceSetRowY {
my ($self,$y) = @_;
$self->{Y} = $y;
}#sub dbPlaceSetRowY

sub dbPlaceGetRowY {
my ($self) = @_;
my $y = $self->{Y};
return($y);
}#sub dbPlaceGetRowY
#-------------------------------------------------#

sub dbPlaceGetRowNI {
my ($self) = @_;
my $ni =  @{$self->{IL}};
return($ni);
}#sub dbPlaceGetRowNI

sub dbPlaceSetRowFP {
my ($self,$fp) = @_;
$self->{FP} = $fp;
}#sub dbPlaceSetRowFP

sub dbPlaceGetRowFP {
my ($self) = @_;
my $fp = $self->{FP};
return($fp);
}#sub dbPlaceGetRowFP

sub dbPlaceSetRowW {
my ($self,$w) = @_;
$self->{W} = $w; 
}#sub dbPlaceSetRowW

sub dbPlaceGetRowW {
my ($self) = @_;
my $w = $self->{W};
return($w);
}#sub dbPlaceGetRowW


1;

