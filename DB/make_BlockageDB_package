package BlockageDB;

# T : type, one of P ( Placement blockage) or R (Routing blockage)
# L : layerName : in case of routing blockage
# Size : Blockages co-ordinates
# PM : Parent Module

sub new {
my $bd = {
          T => "",
          Size => [],
          L => "UND",
          PM => "UND",
          };
bless $bd, 'BlockageDB';
return $bd;
}# sub new

#--------------------------------------------#
sub dbSetParentModule {
my($self,$parentName) = @_;
$self->{PM} = $parentName;
}#sub dbSetParentModule

sub dbGetParentModule {
my($self) = @_;
my $parentName = $self->{PM};
return($parentName);
}#sub dbGetParentModule
#--------------------------------------------#

sub dbSetBlkgType {
my($self,$type) = @_;
$self->{T} = $type;
}#sub dbSetBlkgType

sub dbGetBlkgType {
my($self) = @_;
my $type = $self->{T};
return($type);
}#sub dbGetBlkgType
#--------------------------------------------#

sub dbSetBlkgLayer {
my($self,$type) = @_;
$self->{L} = $type;
}#sub dbSetBlkgLayer

sub dbGetBlkgLayer {
my($self) = @_;
my $type = $self->{L};
return($type);
}#sub dbGetBlkgLayer
#--------------------------------------------#


sub dbSetBlkgSize {
my($self,@rect) = @_;
@{$self->{Size}} = (@rect);
}#sub dbSetBlkgSize

sub dbGetBlkgSize {
my($self) = @_;
my @rect = @{$self->{Size}};
return(@rect);
}#sub dbGetBlkgSize
#--------------------------------------------#



1;
