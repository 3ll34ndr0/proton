package BinInstDB;

####  explanation of database ####
#IL : instance list in an array
#NI  : Number of instances
#NR  : Number of Rows
#FP : Filled percentage
#Y: Y coordinate of first row of a bin
#W: Width of cells in a bin

sub new {

my $bin = {
              IL => [],
              NI => 0,
              NR => 0,
	      Y => 0,
	      W => 0,
              FP => 0,
              };
bless $bin, 'BinInstDB';
return $bin;
}#sub new

#-------------------------------------------------#
sub dbPlaceSetBinY {
my ($self,$y) = @_;
$self->{Y} = $y;
}#sub dbPlaceSetBinY

sub dbPlaceGetBinY {
my ($self) = @_;
my $y = $self->{Y};
return($y);
}#sub dbPlaceGetBinY
#-------------------------------------------------#



#-------------------------------------------------#
sub dbPlaceAddInstInBin {
my ($self,$inst) = @_;
push(@{$self->{IL}}, $inst);
}#sub dbPlaceAddInstInBin

sub dbPlaceDeleteInstInBin {
my ($self,$inst) = @_;
foreach (@{$self->{IL}}) {
	my $test_inst = pop(@{$self->{IL}});
	if ($test_inst eq $inst) {}
	else { unshift(@{$self->{IL}}, $test_inst);}
}
}#sub dbPlaceDeleteInstInBin

sub dbPlaceGetInstInBin {
my ($self) = @_;
my @inst = @{$self->{IL}};
return(@inst);
}#sub dbPlaceGetInstInBin
#-------------------------------------------------#

sub dbPlaceGetBinNI {
my ($self) = @_;
my $ni =  @{$self->{IL}};
return($ni);
}#sub dbPlaceGetBinNI

sub dbPlaceSetBinFP {
my ($self,$fp) = @_;
$self->{FP} = $fp;
}#sub dbPlaceSetBinFP

sub dbPlaceGetBinFP {
my ($self) = @_;
my $fp = $self->{FP};
return($fp);
}#sub dbPlaceGetBinFP

sub dbPlaceSetBinW {
my ($self,$w) = @_;
$self->{W} = $w;
}#sub dbPlaceSetBinW

sub dbPlaceGetBinW {
my ($self) = @_;
my $w = $self->{W};
return($w);
}#sub dbPlaceGetBinW

#-------------------------------------------------#
sub dbPlaceSetBinNR {
my ($self,$nr) = @_;
$self->{NR} = $nr;
}#sub dbPlaceSetBinNR

sub dbPlaceGetBinNR {
my ($self) = @_;
my $nr = $self->{NR};
return($nr);
}#sub dbPlaceGetBinNR



1;

