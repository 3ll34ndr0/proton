sub flatten_design {
my $moduleName = $TOP_MODULE;
print "INFO-PAR-FLATN_DES : 001 : Flattening the design hierarchy for $moduleName\n";
if (exists $MODULE_ALREADY{$moduleName} ) {
            my @hierInsts = $MODULE_ALREADY{$moduleName}->dbVNOMGetHierInst;
            my $nH = @hierInsts;
            if ( $nH == 0 ) {
                            print "WARN-PAR-FLATN_DES : 002 : the module is already flat ... nothing to do \n";
                            } 
            else {
                 print "INFO-PAR-FLATN_DES : 003 : $nH hierarchical instances found in $moduleName \n";
                 # print join ",", @hierInsts ; print "\n";
                 foreach $hinst ( @hierInsts ) {
                 my $cellref = $MODULE_ALREADY{$moduleName}->dbVNOMGetHierInstCell($hinst);
                 if ( exists $MODULE_ALREADY{$cellref} ) {
                                  &dbFlattenPullModule($hinst,$cellref);
                                                         }
                                               }
                 }
                                           }# if the top level module exists
else {
     print "WARN-PAR-FLATN_DES : 004 : The top module $TOP_MODULE does not exist!. Please verify that the top module is specified corrcetly\n";
     }



}#sub flatten_design

sub dbFlattenPullModule {
local $intoModule = $_[0];
local $currentModule = $_[1];
   print "INFO-PAR : 001 : ...flattening $currentModule into $intoModule\n";
   local @leafInsts = $MODULE_ALREADY{$currentModule}->dbVNOMGetLeafInst;
   foreach my $leafInst ( @leafInsts ) {
         my $newInstName = $intoModule."/".$leafInst;
         print "INFO-PAR : 002 : new $newInstName for $intoModule inst $leafInst\n";
                                       }
   


}#sub dbFlattenPullModule

1;
