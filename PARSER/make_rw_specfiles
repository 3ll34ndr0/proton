#!/bin/perl -w

sub read_netlist_spec {
print "INFO-PAR : 001 : reading the spec file ...\n";
my $fileName = $_[0];
############### defaults #################
my $TOP_MODULE = "top";
my $NUM_INPUTS =  10;
my $NUM_OUTPUTS = 10 ;
my $NUM_FLOPS = 50 ;
my $ALGO = 1;
my $OUTFILE = "netListGen";
my $CLUSTERSIZE =  int(rand(5) + 1);
my $TCL = 1;
my $PCL = 1;

open (READ, "$fileName");
while (<READ>) {
chomp();
if ($_ =~ /^TOP_MODULE/ ) { ($TOP_MODULE) = (split(/\s+/, $_))[1]; }
elsif ($_ =~ /^INPUTS/ ) { ($NUM_INPUTS) = (split(/\s+/, $_))[1]; }
elsif ($_ =~ /^OUTPUTS/ ) { ($NUM_OUTPUTS) = (split(/\s+/, $_))[1]; }
elsif ($_ =~ /^FLOPS/ ) { ($NUM_FLOPS) = (split(/\s+/, $_))[1]; }
elsif ($_ =~ /^ALGO/ ) { ($ALGO) = (split(/\s+/, $_))[1]; }
elsif ($_ =~ /^VERILOGFILENAME/ ) { ($OUTFILE) = (split(/\s+/, $_))[1]; }
elsif ($_ =~ /^CLUSTERSIZE/ ) { ($CLUSTERSIZE) = (split(/\s+/, $_))[1]; }
elsif ($_ =~ /^TIMINGCOMPLEX/ ) { ($TCL) = (split(/\s+/, $_))[1]; }
elsif ($_ =~ /^PHYSICALCOMPLEX/ ) { ($PCL) = (split(/\s+/, $_))[1]; }
else { print "WARN-PAR : 002 : tool does not understand the netlist spec provided \n"; }
               }#while
return($TOP_MODULE,$NUM_INPUTS,$NUM_OUTPUTS,$NUM_FLOPS,$CLUSTERSIZE,$TCL,$PCL,$ALGO,$OUTFILE);
}#sub read_netlist_spec

1;
