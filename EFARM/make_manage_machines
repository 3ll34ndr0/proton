# The subroutines in this file are related to machines / lsf-like functionality

sub register_slave_machine {
my $noOfArguments = @_;
if ( $noOfArguments < 1 || $_[0] eq '-h' ) {
print "usage : register_slave_machine -mac <machine name>\n";
                                      }
else {
    for(my $i = 0; $i < $noOfArguments; $i++){
       if($_[$i] eq "-mac"){$macName = $_[$i+1];}
                                             }
       &dbSqlEfarmAddMachine($macName);
       &dbSqlEfarmSetMachineType($macName,0);
 
     }#if correct arguments
}#sub register_slave_machine

sub register_master_machine {
my $noOfArguments = @_;
if ( $noOfArguments < 1 || $_[0] eq '-h' ) {
print "usage : register_master_machine -mac <machine name>\n";
                                      }
else {
    for(my $i = 0; $i < $noOfArguments; $i++){
       if($_[$i] eq "-mac"){$macName = $_[$i+1];}
                                             }
       &dbSqlEfarmAddMachine($macName);
       &dbSqlEfarmSetMachineType($macName,1);

     }
}#sub register_master_machine

sub delete_machine {
my $noOfArguments = @_;
if ( $noOfArguments < 1 || $_[0] eq '-h' ) {
print "usage : delete_machine -del <machine name>\n";
                                      }
else {
    for(my $i = 0; $i < $noOfArguments; $i++){
       if($_[$i] eq "-del"){$macName = $_[$i+1];}
                                             }
        &dbSqlEfarmDelMachine($macName);   
     } 
}#sub delete_machine

sub dbGetBestMachine {

#my $scheduler = Schedule::Load::Schedule->fetch();
#print "Best host for new job : ", $scheduler->best();
#print "\n";
system("tesStatusd");
}#sub dbGetBestMachine

1;
