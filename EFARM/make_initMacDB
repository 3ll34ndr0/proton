


sub init_machine_database {

#****f* /init_machine_database
# NAME
#     init_machine_database 
# FUNCTION
#         initailize the machine database(for machines information)
# SYNOPSIS

# INPUTS
#      options :

# OUTPUTS

#****

print "INFO-EFRM-INIT_MH_DB : 001 : initaillizing the eFarm database \n";
      $dbh = DBI->connect( "dbi:mysql:$MAC_DATABASE","qaadmin","qaadmin" ) || die "Cannot connect: $DBI::errstr";
      my $sql = qq{CREATE TABLE MAC (
      macName VARCHAR(255),
      macType VARCHAR(255),
      macMem FLOAT, 
      macCPU VARCHAR(255),
      macLoad VARCHAR(255),
      Queue VARCHAR(255),
      macOS VARCHAR(255),
      maxConCurrJobs INT,
      macAvail INT,
      PID INT,
      Process VARCHAR(255)
      )};
      my $return = $dbh->do($sql);

}#sub init_machine_database
#&init_machine_database;

#sub check_header_exist1 {
#
#my $column_name = $_[0];
#my $dbh = DBI->connect( "dbi:mysql:$MAC_DATABASE","qaadmin","qaadmin" ) || die "Cannot connect: $DBI::errstr";
#$sth = $dbh->prepare("SHOW COLUMNS FROM MAC LIKE '$column_name'");
#$sth->execute();
#@rows = $sth->fetchrow_array() ;
#my $len = @rows;
#  if(! $len) {
#    print "column not found $column_name\n";
#    return 0 ;
#  }
#  else {
#    print "column found $column_name\n";
#    return 1 ;
#  }
#
#}#sub check_header_exist1
#
#sub addCustomFields1 {
#
#my $column_name = $_[0];
#my $column_def = $_[1];
#print "$column_name $column_def\n";
#my $dbh = DBI->connect( "dbi:mysql:$MAC_DATABASE","qaadmin","qaadmin" ) || die "Cannot connect: $DBI::errstr";
#my $sth = $dbh->prepare( "ALTER TABLE MAC ADD $column_name $column_def");
#$sth->execute();
#
#}#sub addCustomFields1
#
#sub machine_mem {

#****f* /machine_mem
# NAME
#     machine_mem
# FUNCTION
#         add machine information to mac database like machine speed, free memory, memory in use, avg load  
# SYNOPSIS

# INPUTS
#      options :

# OUTPUTS

#****

#  my @mem_info = ();
#  @mem_info = `cat /proc/meminfo`;
#  my $mac = `uname -n`;
#  #my $mac = "aditya.lnx4.com";
#  for ($i = 0; $i < 2 ;$i++) {
#    chomp ($mem_info[$i]);
#    my( $ColName, $ColValue ) = ( split ( /\:\s+/, $mem_info[$i] ) )[0, 1];
#    #print "A $ColName $ColValue";
#
#    if(check_header_exist1($ColName) == 0) {
#      addCustomFields1($ColName, "VARCHAR(255)") ;
#    }
#  my $dbh = DBI->connect( "dbi:mysql:$MAC_DATABASE","qaadmin","qaadmin" ) || die "Cannot connect: $DBI::errstr";
#  $dbh->do( "UPDATE MAC SET $ColName = '$ColValue' WHERE macName ='$mac'" );
#  }
#
#  my @cpu_info = ();
#  @cpu_info = `cat /proc/cpuinfo`;
##print "S $cpu_info[6]\n";
#    chomp ($cpu_info[6]);
#    my( $ColName, $ColValue1 ) = ( split ( /\:\s+/, $cpu_info[6] ) )[0, 1];
#    #print "AA $ColName $ColValue1";
#    my $ColName1 = "macSpeed";
#    if(check_header_exist1($ColName1) == 0) {
#      addCustomFields1($ColName1, "VARCHAR(255)") ;
#    }
#  my $dbh = DBI->connect( "dbi:mysql:$MAC_DATABASE","qaadmin","qaadmin" ) || die "Cannot connect: $DBI::errstr";
#  $dbh->do( "UPDATE MAC SET $ColName1 = '$ColValue1 MHz' WHERE macName ='$mac'" );
#
#  my $uname = `uptime`;
#  my( @split) = ( split ( /\s+/, $uname ) );
#  my( $split2) = ( split ( /\,/, $split[10] ) );
#  my( $split3) = ( split ( /\,/, $split[11] ) );
#  my $avg_value = $split2.",".$split3.",".$split[12];
#  chomp ($avg_value);
#  my $dbh = DBI->connect( "dbi:mysql:$MAC_DATABASE","qaadmin","qaadmin" ) || die "Cannot connect: $DBI::errstr";
#  $dbh->do( "UPDATE MAC SET macLoad = '$avg_value' WHERE macName ='$mac'" );
#  print "DEBUG $mac $avg $avg_value\n";
#}#sub machine_mem
1;
